{"version":3,"sources":["./src/app/services/role.service.ts","./src/environments/environment.ts","./src/app/models/room.model.ts","./src/app/pipes/room-capability.pipe.ts","./src/app/services/user.model.ts","./src/app/services/data.service.ts","./src/app/container/room/room-form/room-form.component.ts","./src/app/container/room/room-form/room-form.component.html","./src/app/navbar/role/role.component.ts","./src/app/navbar/role/role.component.html","./src/app/container/room/room.component.ts","./src/app/container/room/room.component.html","./src/app/models/employee.model.ts","./src/app/navbar/role/edit-role/edit-role.component.ts","./src/app/navbar/role/edit-role/edit-role.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/container/employee/create/create.component.ts","./src/app/container/employee/create/create.component.html","./src/app/app.module.ts","./src/app/models/role.model.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/container/employee/employee.component.ts","./src/app/container/employee/employee.component.html","./src/app/services/employee.service.ts","./src/app/container/container.component.ts","./src/app/container/container.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/services/room.service.ts","./src/app/pipes/employee-capability.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAIb;;;;;AAKnC,MAAM,WAAW;IASpB,YAAsB,IAAgB,EAAY,WAAwB,EAAU,WAAwB;QAAtF,SAAI,GAAJ,IAAI,CAAY;QAAY,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QARrG,oBAAe,GAAO,EAAE,CAAC;QACzB,oBAAe,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAC7D,cAAS,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAClD,oBAAe,GAAsB,IAAI,0DAAY,EAAE,CAAC;QACxD,iBAAY,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAErD,UAAK,GAAW,EAAE,CAAC;IAG1B,CAAC;IAEM,QAAQ;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACrH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,eAAe;QAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC7H,MAAM,IAAI,GAAO,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YACvD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,UAAU,CAAC,IAAU;QACxB,2CAA2C;QAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtI,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;iBAAM;gBACH,KAAK,CAAC,iDAAiD,CAAC,CAAC;aAC5D;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,OAAO,CAAC,IAAU;QACrB,2CAA2C;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC5H,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;iBAAM;gBACH,KAAK,CAAC,+CAA+C,CAAC,CAAC;aAC1D;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,UAAU,CAAC,IAAU;QACxB,2CAA2C;QAC3C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACnI,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;iBAAM;gBACH,KAAK,CAAC,kDAAkD,CAAC,CAAC;aAC7D;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,OAAO,CAAC,IAiBf;QACG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,uDAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;;sEAvFQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;;;;;;;;;;;;;ACPtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAO,MAAM,IAAI;IAQb,YAAY,IAOX;QACG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;IAC7C,CAAC;CACJ;;;;;;;;;;;;;;;;;AClBM,MAAM,kBAAkB;IAE7B,SAAS,CAAC,KAAS,EAAE,GAAG,IAAe;QACrC,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAES,YAAY,CAAC,IAAQ;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,GAAW,EAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9H,CAAC;;oFARU,kBAAkB;4GAAlB,kBAAkB;;;;;;;;;;;;;ACL/B;AAAA;AAAO,MAAM,IAAI;IAKf,YAAY,GAcX;QACC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,EAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAC,CAAC;IAElC,CAAC;IAGM,eAAe;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAGM,OAAO;;QACZ,OAAO,OAAC,IAAI,CAAC,OAAO,0CAAE,IAAI,CAAW,CAAC;IACxC,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAc,CAAC;IAC7B,CAAC;CAEF;;;;;;;;;;;;;;;;;AC/BM,MAAM,WAAW;IAEtB;IACA,CAAC;IAEM,MAAM,CAAC,QAAgB;QAC5B,OAAO,0BAA0B,GAAG,QAAQ,CAAC;IAC/C,CAAC;IAEM,eAAe,CAAC,QAA0D;QAC/E,OAAO,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC;IAEM,iBAAiB,CAAC,QAA0D;QACjF,OAAO,CAAC,QAAQ,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;IACrE,CAAC;IAEM,kBAAkB,CAAC,QAA0D;QAClF,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC1B,CAAC;;sEAnBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;;;;;;;AAShE,MAAM,iBAAiB;IAK5B,2CAA2C;IAC3C,YAA4C,IAAU,EAAS,WAAwB,EAAS,MAAuC;QAA3F,SAAI,GAAJ,IAAI,CAAM;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAiC;QAHhI,aAAQ,GAAG,KAAK,CAAC;QAItB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAQ,EAAE,EAAE;YACvE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,EAAQ,EAAE,EAAE;YAC7E,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACrC,CAAC;;kFA/BU,iBAAiB,kEAMR,wEAAe;iGANxB,iBAAiB;QCX9B,wEAAqB;QAAA,+DAAI;QAAA,4DAAK;QAC9B,wFAA2C;QACzC,uEAAM;QACJ,yEAAwB;QACtB,wEAAO;QAAA,kEAAO;QAAA,4DAAQ;QACtB,2EAAgF;QAA7D,0LAAyB;QAA5C,4DAAgF;QAClF,4DAAM;QACN,yEAAwB;QACtB,wEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,4EAA4E;QAAzD,yLAAuB;QAA1C,4DAA4E;QAC9E,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,yEAAa;QAAA,4DAAQ;QAC5B,4EAA6F;QAAzE,iMAA+B;QAAnD,4DAA6F;QAC/F,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QACtB,4EAAoF;QAA/D,4LAA0B;QAA/C,4DAAoF;QACtF,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAC7B,6EAAmF;QAA3E,mMAAgC;QACtC,6EAAiB;QAAA,wEAAY;QAAA,4DAAS;QACtC,6EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC9C,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAqB;QACrB,0FAAgC;QAC9B,8EAA6D;QAA1C,yJAAkB,gBAAY,GAAC,aAAS,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAC1E,8EAAoC;QAAA,iEAAK;QAAA,4DAAS;QACpD,4DAAqB;;QA3BI,0DAAyB;QAAzB,oFAAyB;QAIzB,0DAAuB;QAAvB,kFAAuB;QAItB,0DAA+B;QAA/B,0FAA+B;QAI9B,0DAA0B;QAA1B,qFAA0B;QAIvC,0DAAgC;QAAhC,2FAAgC;;;;;;;;;;;;;;ACpB9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAGqB;;;;;;;;;;;;ICD9D,4EAA4D;;;;IAExD,4EAC0B;IADlB,oTAAqB;IAEzB,+EAA6D;IAAA,8DAAG;IAAA,4DAAW;IAC3E,qEACJ;IAAA,4DAAS;;;IAIL,yEAAsC;IAAC,iEAAK;IAAA,4DAAK;;;IACjD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEAAsC;IAAC,kFAAsB;IAAA,4DAAK;;;IAClE,yEAAuC;IACnC,2EAA6C;IACzC,uEAAM;IACF,4EAAkE;IAAA,+DAAI;IAAA,4DAAQ;IAC9E,uDACJ;;IAAA,4DAAO;IACP,uEAAM;IACF,4EAAkE;IAAA,+DAAI;IAAA,4DAAQ;IAC9E,wDACJ;;IAAA,4DAAO;IACX,4DAAO;IACX,4DAAK;;;IAPO,0DACJ;IADI,qKACJ;IAGI,0DACJ;IADI,sKACJ;;;IAKR,yEAAyD;IAAC,mEAAO;IAAA,4DAAK;;;;IACtE,yEAA0D;IACrD,2EAAiD;IAC9C,uEAAM;IACE,+EACyC;IAD/B,6WAA6B;IACE,+DAAI;IAAA,4DAAW;IAChE,4DAAO;IACN,uEAAM;IACC,+EACyC;IAD/B,+WAA+B;IACA,iEAAM;IAAA,4DAAW;IACjE,4DAAO;IACX,4DAAO;IACZ,4DAAK;;;IAGT,oEAA4D;;;IAC5D,oEAAkE;;;IAtCtE,4EAAkF;IAC9E,4EAAmC;IAC/B,gHAAiD;IACjD,gHAA+D;IACnE,qEAAe;IAEf,4EAA0C;IACtC,gHAAkE;IAClE,iHAWK;IACT,qEAAe;IACf,4EAAqC;IACjC,gHAAsE;IACtE,gHAWK;IACT,qEAAe;IAEf,kHAA4D;IAC5D,kHAAkE;IACtE,4DAAQ;;;IAvC4B,oFAAoB;IAqChC,2DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;;ADrC5D,MAAM,aAAa;IAQtB,YAAoB,WAAwB,EAAY,MAAiB;QAArD,gBAAW,GAAX,WAAW,CAAa;QAAY,WAAM,GAAN,MAAM,CAAW;QAPzE,qBAAgB,GAAa,CAAC,OAAO,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;QAC3D,UAAK,GAAW,EAAE,CAAC;QACnB,iBAAY,GAAa,EAAE,CAAC;QAG5B,cAAS,GAAG,IAAI,CAAC;QAGpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACpE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAC/E,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IAED,WAAW;QACP,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAED,UAAU,CAAC,IAAU;QACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACtD,CAAC;IAED,SAAS;QACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE,EAAC,IAAI,EAAE,IAAI,uDAAI,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IAClG,CAAC;IAED,YAAY,CAAC,IAAU;QACnB,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACrC;IACL,CAAC;;0EAzCQ,aAAa;6FAAb,aAAa;QCZ1B,wEAAqB;QAAA,gEAAK;QAAA,4DAAK;QAE/B,wFAA2C;QACvC,yHAA4D;QAC5D,yEAAwC;QACpC,+GAIS;QACb,4DAAM;QACN,8GAuCQ;QACZ,4DAAqB;QACrB,wFAAgC;QAC5B,4EAAoC;QAAA,gEAAK;QAAA,4DAAS;QACtD,4DAAqB;;QAnDY,0DAAe;QAAf,+EAAe;QAEG,0DAAgB;QAAhB,gFAAgB;QAMvD,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;ACV5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAIqB;;;;;;;;;;;;ICH9D,6EAC0B;IAD8B,qTAAmB;IAEzE,+EAA6D;IAAA,8DAAG;IAAA,4DAAW;IAC3E,qEACF;IAAA,4DAAS;;;IAKL,yEAAsC;IAAC,mEAAO;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAI3D,yEAAsC;IAAC,gEAAI;IAAA,4DAAK;;;IAChD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAIzD,yEAAsC;IAAC,yEAAa;IAAA,4DAAK;;;IACzD,yEAAuC;IAAC,uDAAyB;IAAA,4DAAK;;;IAA9B,0DAAyB;IAAzB,oGAAyB;;;IAKjE,yEAAsC;IAAC,mEAAO;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAI5D,yEAAsC;IAAC,0EAAc;IAAA,4DAAK;;;IAC1D,yEAAuC;IAAC,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,qGAA0B;;;IAIlE,yEAA0D;IAAC,kEAAM;IAAA,4DAAK;;;;IAGtD,wEAAuI;IAA9D,0ZAA2B;IAAmC,4DAAI;;;;IAC3I,wEAAyI;IAA9D,4ZAA6B;IAAiC,4DAAI;;;IAH7J,yEAAuC;IAC3B,2EAAwD;IACpD,4GAA2I;IAC3I,4GAA6I;IACjJ,4DAAO;IACnB,4DAAK;;;IAHe,0DAA2C;IAA3C,+GAA2C;IAC3C,0DAA6C;IAA7C,iHAA6C;;;IAKnE,oEAA4D;;;IAC5D,oEAAkE;;ADjCjE,MAAM,aAAa;IAMxB,YAAmB,WAAwB,EAAS,MAAiB,EAAS,WAAwB;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAa;QALtG,qBAAgB,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;QACrF,UAAK,GAAW,EAAE,CAAC;QAKxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACjF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YACpE,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;gBAC9F,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,IAAI,uDAAI,CAAC;YACvB,EAAE,EAAE,CAAC;YACL,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;YACX,cAAc,EAAE,EAAE;SACnB,CAAC,CAAC,CAAC;IACN,CAAC;IAED,QAAQ,CAAC,IAAU;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACnC;IACH,CAAC;IAEO,UAAU,CAAC,IAAU;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE;YAClC,IAAI,oBAAM,IAAI,CAAC;SAChB,CAAC,CAAC;IACL,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;;0EArDU,aAAa;6FAAb,aAAa;QCd1B,yEAAuB;QACrB,yEAA6C;QAC3C,+GAIS;QACX,4DAAM;QACN,2EAAU;QACR,2EAAoD;QAClD,2EAAoC;QAClC,uGAAmD;QACnD,uGAAgE;QAClE,qEAAe;QAEf,2EAAkC;QAChC,uGAAgD;QAChD,yGAA8D;QAChE,qEAAe;QAEf,4EAA0C;QACxC,yGAAyD;QACzD,yGAAsE;QACxE,qEAAe;QAGf,4EAAqC;QACnC,yGAAmD;QACnD,yGAAiE;QACnE,qEAAe;QAEf,6EAA2C;QACzC,yGAA0D;QAC1D,yGAAuE;QACzE,qEAAe;QAEf,6EAAqC;QACnC,0GAAsE;QACtE,yGAKK;QACP,qEAAe;QAEf,0GAA4D;QAC5D,0GAAkE;QACpE,4DAAQ;QACV,4DAAW;QACb,4DAAM;;QAhDO,0DAA6C;QAA7C,6GAA6C;QAOrC,0DAAoB;QAApB,iFAAoB;QAqCf,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;AC/CjE;AAAA;AAAO,MAAM,QAAQ;IAUnB,YAAY,QASX;QACC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC9B,CAAC;CACF;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;;;;ICSpD,iFAAsD;IAAA,uDAAO;IAAA,4DAAa;;;IAAlC,yEAAa;IAAC,0DAAO;IAAP,uEAAO;;ADCtE,MAAM,iBAAiB;IAM1B,YAAoB,WAAwB,EAAkC,IAAU;QAApE,gBAAW,GAAX,WAAW,CAAa;QAAkC,SAAI,GAAJ,IAAI,CAAM;QALjF,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAa,EAAE,CAAC;QAEvB,eAAU,GAAG,IAAI,CAAC;QAGrB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YACV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SAC3B;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,IAAc,EAAE,EAAE;YAC1E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;IACvC,CAAC;IAED,UAAU;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,OAAO;QACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;;kFAzBQ,iBAAiB,uMAM4B,wEAAe;iGAN5D,iBAAiB;QCZ9B,wEAAqB;QAAA,gEAAK;QAAA,4DAAK;QAC/B,wFAA2C;QACvC,uEAAM;QACF,yEAAyB;QACrB,wEAAO;QAAA,+DAAI;QAAA,4DAAQ;QACnB,2EAA8E;QAAzB,yLAAwB;QAA7E,4DAA8E;QAClF,4DAAM;QAEN,oFAAkC;QAC9B,4EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,iFAAqG;QAAhC,sMAA+B;QAChG,6HAA0E;QAC9E,4DAAa;QACjB,4DAAiB;QACrB,4DAAO;QACX,4DAAqB;QACrB,yFAAgC;QAC5B,6EAAgF;QAA5C,2JAAoB,gBAAY,GAAC,aAAS,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAC7F,6EAAoC;QAAA,iEAAK;QAAA,4DAAS;QACtD,4DAAqB;;QAd4C,0DAAwB;QAAxB,mFAAwB;QAKpC,0DAA2B;QAA3B,wFAA2B;QACpC,0DAAU;QAAV,gFAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICVtD,uEAA+C;;;IAC/C,2EAAsD;;ACU/C,MAAM,YAAY;IAKvB,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJpC,mBAAc,GAAG,IAAI,CAAC;QAK3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YACxE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE;YACrC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;QAED,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACnE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;IAEN,CAAC;IAED,SAAS;QACP,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QAClC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACrC,CAAC;;wEA5BU,YAAY;4FAAZ,YAAY;QDZzB,wEAAyB;QACzB,oHAA+C;QAC/C,4HAAsD;QACtD,2EAA+B;;QAFnB,0DAAqB;QAArB,qFAAqB;QACjB,0DAAoB;QAApB,oFAAoB;;;;;;;;;;;;;;AEIpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkF;;;;;;;;;;ICgD5E,6EAAqD;IAAA,uDAAc;IAAA,4DAAS;;;IAAzC,6EAAiB;IAAC,0DAAc;IAAd,8EAAc;;ADxClE,MAAM,eAAe;IAQ1B,YAA4C,QAAkB,EAAU,eAAgC,EAAY,WAAwB,EAAS,MAAqC;QAA9I,aAAQ,GAAR,QAAQ,CAAU;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAY,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAA+B;QAPnL,cAAS,GAAG,KAAK,CAAC;QAIlB,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAG,KAAK,CAAC;QAGtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAC9D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACtE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1E,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;;8EAtCU,eAAe,kEAQN,wEAAe;+FARxB,eAAe;QCd5B,wEAAqB;QAAA,uEAAY;QAAA,4DAAK;QACtC,wFAA2C;QACzC,yEAAiB;QACf,yEAAmB;QACjB,yEAAwB;QACtB,wEAAO;QAAA,gEAAK;QAAA,4DAAQ;QACpB,2EACoC;QAA7B,2LAA4B;QADnC,4DACoC;QACtC,4DAAM;QACR,4DAAM;QACN,yEAAmB;QACjB,0EAAwB;QACtB,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,4EACmC;QAA5B,2LAA2B;QADlC,4DACmC;QACrC,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EAAiB;QACf,0EAAmB;QACjB,0EAAwB;QACtB,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,4EACoC;QAA7B,4LAA4B;QADnC,4DACoC;QACtC,4DAAM;QACR,4DAAM;QACN,0EAAmB;QACjB,0EAAwB;QACtB,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EACuC;QAAhC,+LAA+B;QADtC,4DACuC;QACzC,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EAAiB;QACf,0EAAmB;QACjB,0EAAwB;QACtB,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,4EACmC;QAA5B,2LAA2B;QADlC,4DACmC;QACrC,4DAAM;QACR,4DAAM;QACN,0EAAmB;QACjB,0EAAwB;QACtB,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,6EACoC;QAA7B,4LAA4B;QADnC,4DACoC;QACtC,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EAAwB;QACtB,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,8EAAyE;QAA9B,8LAA6B;QACtE,oHAA4E;QAC9E,4DAAS;QACX,4DAAM;QACR,4DAAqB;QACrB,0FAAgC;QAC9B,8EAAsE;QAAnD,uJAAkB,kBAAc,GAAC,oBAAgB,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACnF,8EAAoC;QAAA,iEAAK;QAAA,4DAAS;QACpD,4DAAqB;;QAtDN,0DAA4B;QAA5B,uFAA4B;QAO5B,0DAA2B;QAA3B,sFAA2B;QAU3B,0DAA4B;QAA5B,uFAA4B;QAO5B,0DAA+B;QAA/B,0FAA+B;QAS/B,0DAA2B;QAA3B,sFAA2B;QAO3B,0DAA4B;QAA5B,uFAA4B;QAMI,0DAA6B;QAA7B,wFAA6B;QAC7C,0DAAQ;QAAR,8EAAQ;;;;;;;;;;;;;;ACrDvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEF;AACT;AACU;AACD;AACU;AACN;AACS;AACO;AACZ;AACe;AACxB;AACwB;AACb;AACP;AACE;AACF;AACF;AACE;AACe;AACR;AACY;AACE;AACnB;AACN;AACA;AACA;AAC4B;;AAuC1E,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,EAAE,YAnBJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,qEAAS;YACT,6FAAuB;YACvB,gFAAkB;YAClB,yEAAe;YACf,kEAAmB;YACnB,yEAAe;YACf,uEAAc;YACd,yEAAe;YACf,4FAAwB;YACxB,2EAAgB;YAChB,qEAAa;YACb,qEAAa;YACb,qEAAa;SACd;oIAIU,SAAS,mBAnClB,2DAAY;QACZ,qEAAc;QACd,wEAAe;QACf,iFAAkB;QAClB,wFAAiB;QACjB,4EAAa;QACb,4FAAe;QACf,0EAAa;QACb,uFAAsB;QACtB,+EAAkB;QAClB,6FAAiB;QACjB,gGAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;QACX,qEAAS;QACT,6FAAuB;QACvB,gFAAkB;QAClB,yEAAe;QACf,kEAAmB;QACnB,yEAAe;QACf,uEAAc;QACd,yEAAe;QACf,4FAAwB;QACxB,2EAAgB;QAChB,qEAAa;QACb,qEAAa;QACb,qEAAa;;;;;;;;;;;;;AC/DjB;AAAA;AAAO,MAAM,IAAI;IAKb,YAAY,IAA2D;QACnE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IAC1C,CAAC;CACJ;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;;;;;;;;;;;ICK1C,6EAA8F;IAA/D,mUAA2B;IACxD,+EAAiD;IAC/C,8DACoC;IADpC,0EACoC;IAClC,oEAAG;IACD,sEAAuC;IACvC,sEACk2B;IACp2B,4DAAI;IACN,4DAAM;IACR,4DAAW;IACX,kEACF;IAAA,4DAAS;;;IAdX,yEACwG;IACtG,uHAYS;IACX,4DAAM;;;IAbK,0DAAoB;IAApB,uFAAoB;;;;IAiB/B,yEAC4B;IAC1B,0EAAiB;IACf,+EAAiD;IAC/C,8DAAmF;IAAnF,0EAAmF;IACjF,sEAAqC;IACrC,sEAC8P;IAChQ,4DAAM;IACR,4DAAW;IAEb,4DAAM;IACN,+DAAiB;IAAjB,0EAAiB;IACf,2EAAe;IACb,uDAAyD;;IAAA,6EACzC;IAAA,wDAAwD;;IAAA,4DAAQ;IAClF,4DAAO;IACT,4DAAM;IACN,2EAAiB;IACf,8EAA8D;IAAtD,kTAAkB;IACxB,oEACA;IAAA,gFAAiD;IAC/C,8DAAmF;IAAnF,2EAAmF;IACjF,uEAAqC;IACrC,uEACsH;IACxH,4DAAM;IACR,4DAAW;IACb,4DAAS;IACX,4DAAM;IACR,4DAAM;;;IAhBA,0DAAyD;IAAzD,mMAAyD;IACzC,0DAAwD;IAAxD,yLAAwD;;AD5B/E,MAAM,eAAe;IAO1B,YAAmB,WAAwB,EAAY,WAAwB,EAAS,MAAiB;QAAtF,gBAAW,GAAX,WAAW,CAAa;QAAY,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QANlG,mBAAc,GAAG,KAAK,CAAC;QAIvB,gBAAW,GAAG,KAAK,CAAC;QAGzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YACpE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5D,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kEAAa,CAAC,CAAC;IAClC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;;8EA/BU,eAAe;+FAAf,eAAe;QCd5B,yEAAkH;QAChH,uEAAiC;QAAA,yEAAQ;QAAA,iEAAM;QAAA,4DAAS;QAAA,iEAAM;QAAA,4DAAI;QAElE,yEAA0D;QACxD,yEAA0C;QACxC,oEACM;QACN,yEAAsB;QACpB,2GAeM;QACR,4DAAM;QACN,0EAAsB;QAEpB,8GA8BM;QACR,4DAAM;QAGR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAtDQ,0DAAgG;QAAhG,wJAAgG;QAmBhG,0DAAoB;QAApB,oFAAoB;;;;;;;;;;;;;;AC5BlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACyB;AAE9C;;;;AAQ3B,MAAM,WAAW;IAMtB,YAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAJ/D,cAAS,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAClD,oBAAe,GAAsB,IAAI,0DAAY,EAAE,CAAC;QACxD,eAAU,GAAsB,IAAI,0DAAY,EAAE,CAAC;IAG1D,CAAC;IAEO,MAAM,CAAC,QAAgB;QAC7B,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAEM,KAAK,CAAC,KAAa,EAAE,QAAgB;QAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACxF,IAAI,GAAG,CAAC,OAAO,EAAE;gBACf,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,YAAsB,CAAC,CAAC;gBACtE,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,IAAI,CAAC,aAAuB,CAAC,CAAC;gBACxE,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC1C,KAAK,CAAC,sBAAsB,CAAC,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc;QACnB,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjH,IAAI,GAAG,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,IAAI,GAAG,IAAI,gDAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACT,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc;QACnB,OAAO,YAAY,CAAC,OAAO,CAAC,cAAc,CAAW,CAAC;IACxD,CAAC;IAEM,eAAe;QACpB,OAAO,YAAY,CAAC,OAAO,CAAC,eAAe,CAAW,CAAC;IACzD,CAAC;IAEM,MAAM;QACX,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QACzC,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC3C,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,gEAAW,EAAE;aACrB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;aACvC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC;aACvC,GAAG,CAAC,8BAA8B,EAAE,GAAG,CAAC;aACxC,GAAG,CAAC,QAAQ,EAAE,8BAA8B,CAAC;aAC7C,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IAC7D,CAAC;IAEM,OAAO,CAAC,GAAW;QACxB,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;IAEM,YAAY,CAAC,GAAsB;QACxC,QAAQ,GAAG,CAAC,MAAM,EAAE;YAClB,KAAK,GAAG;gBACN,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM;SACT;IACH,CAAC;;sEA1EU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHV,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AAIK;;;;;;;;;;;;ICJtD,6EAC0B;IAD6B,6TAAuB;IAE5E,+EAA6D;IAAA,8DAAG;IAAA,4DAAW;IAC3E,yEACF;IAAA,4DAAS;;;IAOH,yEAAsC;IAAC,uEAAW;IAAA,4DAAK;;;IACvD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEAAsC;IAAC,gEAAI;IAAA,4DAAK;;;IAChD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAIzD,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;IAChD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEAAuC;IAAC,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;IAK7D,yEAAsC;IAAC,gEAAI;IAAA,4DAAK;;;IAChD,yEAAuC;IAAC,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;IAIzD,yEAAsC;IAAC,iEAAK;IAAA,4DAAK;;;IACjD,yEAAuC;IAAC,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEAA0D;IAAC,kEAAM;IAAA,4DAAK;;;;IAGxD,wEACqE;IAAlE,kaAA+B;IAAmC,4DAAI;;;;IACzE,wEACsE;IAAnE,6UAAkC;IAAiC,4DAAI;;;IALxF,yEAAuC;IAC7B,2EAAwD;IACpD,gHACyE;IACzE,gHAC0E;IAC9E,4DAAO;IACjB,4DAAK;;;IALa,0DAA0C;IAA1C,8GAA0C;IAE1C,0DAA4C;IAA5C,gHAA4C;;;IAMhE,oEAA4D;;;IAC5D,oEAAkE;;AD1CnE,MAAM,iBAAiB;IAwB5B,YAAmB,eAAgC,EAAS,WAAwB,EAAS,MAAiB;QAA3F,oBAAe,GAAf,eAAe,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAvBvG,cAAS,GAAe,EAAE,CAAC;QAC3B,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;QACnB,qBAAgB,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QAOlF,aAAQ,GAAa,IAAI,+DAAQ,CACtC;YACE,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,EAAE;SACV,CACF,CAAC;QAGA,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,SAAqB,EAAE,EAAE;YACnG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,QAAkB,EAAE,EAAE;YAClG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAkB,EAAE,EAAE;YAC5F,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;IACnC,CAAC;IAED,YAAY,CAAC,QAAkB;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IACtD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE;YAChC,IAAI,EAAE,IAAI,+DAAQ,CAAC;gBACjB,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,EAAE;gBACR,MAAM,EAAE,EAAE;gBACV,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,EAAE;gBACR,OAAO,EAAE,CAAC;gBACV,KAAK,EAAE,EAAE;aACV,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;YAC7B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;SAC/C;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;QAC3C,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;QAC5C,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;QAC9C,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;IAC7C,CAAC;;kFA7EU,iBAAiB;iGAAjB,iBAAiB;QCd9B,yEAAuB;QACrB,yEAA6C;QAC3C,mHAIS;QACX,4DAAM;QACN,yEAAuB;QAErB,2EAAU;QACR,2EAAwD;QACtD,2EAAgC;QAC9B,2GAAuD;QACvD,2GAA+D;QACjE,qEAAe;QAEf,2EAAkC;QAChC,6GAAgD;QAChD,6GAA8D;QAChE,qEAAe;QAEf,4EAAmC;QACjC,6GAAgD;QAChD,6GAA+D;QACjE,qEAAe;QAEf,6EAAsC;QACpC,6GAAmD;QACnD,6GAAkE;QACpE,qEAAe;QAGf,6EAAkC;QAChC,6GAAgD;QAChD,6GAA8D;QAChE,qEAAe;QAEf,6EAAmC;QACjC,6GAAiD;QACjD,6GAA+D;QACjE,qEAAe;QAEf,6EAAoC;QAClC,8GAAsE;QACtE,6GAOK;QACP,qEAAe;QAEf,8GAA4D;QAC5D,8GAAkE;QACpE,4DAAQ;QACV,4DAAW;QACb,4DAAM;QACR,4DAAM;;QA1DO,0DAA4C;QAA5C,4GAA4C;QASlC,0DAAwB;QAAxB,qFAAwB;QA4CnB,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;ACxDnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACL;;;;;AAU3C,MAAM,eAAe;IASxB,YAAoB,IAAgB,EAAU,WAAwB,EAAU,WAAwB;QAApF,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QARjG,cAAS,GAAe,EAAE,CAAC;QAC3B,iBAAY,GAAsB,IAAI,0DAAY,EAAE,CAAC;QACrD,cAAS,GAA2B,IAAI,0DAAY,EAAE,CAAC;QACvD,gBAAW,GAA2B,IAAI,0DAAY,EAAE,CAAC;QACzD,aAAQ,GAA2B,IAAI,0DAAY,EAAE,CAAC;QACnD,oBAAe,GAAO,EAAE,CAAC;QAI/B,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAEM,SAAS;QACZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACzG,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;aACvD;iBAAM;gBACH,KAAK,CAAC,kCAAkC,CAAC,CAAC;aAC7C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEO,OAAO,CAAC,IAAwC;QACpD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;YAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,+DAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IAED,WAAW,CAAC,QAAkB;QAC5B,2CAA2C;QACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACpI,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,MAAM,GAAG,GAAa,IAAI,+DAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACH,KAAK,CAAC,kEAAkE,CAAC,CAAC;aAC7E;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,QAAkB;QAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,gBAAgB,GAAG,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7H,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,QAAkB;QAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,gBAAgB,GAAG,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC3H,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,UAAU;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;;8EAhEQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACFf,MAAM,kBAAkB;IAE3B;IACA,CAAC;IAED,QAAQ;IACR,CAAC;;oFANQ,kBAAkB;kGAAlB,kBAAkB;QCP/B,mFAA4B;QAC1B,6EAAwC;QACtC,0EAA6B;QAC/B,4DAAU;QACV,6EAAoC;QAClC,sEAAqB;QAEvB,4DAAU;QACZ,4DAAgB;;;;;;;;;;;;;;ACPhB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;;;;ICuBwE,mEAE9C;;ACtB3C,MAAM,cAAc;IAKzB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJrC,cAAS,GAAG,KAAK,CAAC;QAKvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACzE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAEM,KAAK,CAAC,SAAiB;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC1E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;;4EAxBU,cAAc;8FAAd,cAAc;;QDV3B,yEAAuB;QACrB,yEAA4C;QAC1C,yEAAsC;QACpC,yEAA+B;QAC7B,yEAA+C;QAAA,gEAAK;QAAA,4DAAM;QAC1D,yEAAuB;QACrB,6EAA2E;QAAlD,sRAAY,cAAgB,IAAC;QACpD,yEAAwB;QACtB,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,wEAOE;QACJ,4DAAM;QACN,2EAA6B;QAC3B,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,wEAOE;QACJ,4DAAM;QACN,2EAA6B;QAC3B,8EAA4E;QAAA,kEAAM;QAAA,yGAE9C;QACpC,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;QAVqD,2DAA8B;QAA9B,iFAA8B;QACxE,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;AE/BhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACb;;;;;AAQnC,MAAM,WAAW;IAMpB,YAAmB,WAAwB,EAAS,WAAwB,EAAU,IAAgB;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAL/F,UAAK,GAAW,EAAE,CAAC;QACnB,mBAAc,GAAsB,IAAI,0DAAY,EAAE,CAAC;QACvD,iBAAY,GAAsB,IAAI,0DAAY,EAAE,CAAC;QACrD,oBAAe,GAAsB,IAAI,0DAAY,EAAE,CAAC;IAG/D,CAAC;IAEO,OAAO,CAAC,IAaf;QACG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,uDAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,QAAQ;QACX,2CAA2C;QAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,sBAAsB,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtI,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACjF;iBAAM;gBACH,KAAK,CAAC,2BAA2B,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO,CAAC,IAAU;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,sBAAsB,CAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC7I,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,MAAM,KAAK,GAAG,IAAI,uDAAI,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;iBAAM;gBACH,KAAK,CAAC,yBAAyB,CAAC,CAAC;aACpC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,IAAU;QACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,uBAAuB,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACvJ,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;iBAAM;gBACH,KAAK,CAAC,2BAA2B,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,IAAU;QACjB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,uBAAuB,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACpJ,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;iBAAM;gBACH,KAAK,CAAC,2BAA2B,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;sEAzEQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;;;;;;;;;;;;;;;;;ACFf,MAAM,sBAAsB;IAHnC;QAIc,WAAM,GAAO,EAAE,CAAC;KAS7B;IAPG,SAAS,CAAC,KAAS,EAAE,GAAG,IAAe;QACnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAES,gBAAgB,CAAC,IAAQ;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,GAAW,EAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9H,CAAC;;4FATQ,sBAAsB;oHAAtB,sBAAsB;;;;;;;;;;;;;;;;;;;ACLY;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import {EventEmitter, Injectable} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {HttpClient} from '@angular/common/http';\nimport {DataService} from './data.service';\nimport {Role} from '../models/role.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RoleService {\n    public allCapabilities: [] = [];\n    public capabilityEvent: EventEmitter<any> = new EventEmitter<any>();\n    public roleEvent: EventEmitter<any> = new EventEmitter();\n    public roleUpdateEvent: EventEmitter<any> = new EventEmitter();\n    public roleAddEvent: EventEmitter<any> = new EventEmitter();\n\n    public roles: Role[] = [];\n\n    constructor(protected http: HttpClient, protected authService: AuthService, private dataService: DataService) {\n    }\n\n    public getRoles(): void {\n        this.http.get(this.dataService.getUrl('/api/role'), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            this.setData(this.dataService.getResponseData(res));\n            this.roleEvent.emit(this.roles);\n        });\n    }\n\n    public getCapabilities(): void {\n        this.http.get(this.dataService.getUrl('/api/capabilities'), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            const data: [] = this.dataService.getResponseData(res);\n            this.allCapabilities = [];\n            data.forEach((k, v) => {\n                this.allCapabilities.push(k);\n            });\n            this.capabilityEvent.emit(this.allCapabilities);\n        });\n    }\n\n    public updateRole(role: Role): void {\n        // tslint:disable-next-line:max-line-length\n        this.http.put(this.dataService.getUrl('/api/role/' + role.id), role, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.roleUpdateEvent.emit(role);\n                this.getRoles();\n            } else {\n                alert('Error while updating the role, Please try again');\n            }\n        });\n    }\n\n    public addRole(role: Role): void {\n        // tslint:disable-next-line:max-line-length\n        this.http.post(this.dataService.getUrl('/api/role'), role, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.roleAddEvent.emit(role);\n                this.getRoles();\n            } else {\n                alert('Error while adding the role, Please try again');\n            }\n        });\n    }\n\n    public deleteRole(role: Role): void {\n        // tslint:disable-next-line:max-line-length\n        this.http.delete(this.dataService.getUrl('/api/role/' + role.id), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.getRoles();\n            } else {\n                alert('Error! while deletig the Role, Please try again.');\n            }\n        });\n    }\n\n    private setData(data: {\n        current_page: number,\n        data: [{\n            id: number,\n            title: string,\n            capabilities: [string]\n        }];\n        first_page_url: string,\n        from: number,\n        last_page: number,\n        last_page_url: string,\n        next_page_url: string | null,\n        path: string,\n        per_page: number,\n        prev_page_url: string | null,\n        to: number,\n        total: number\n    }): void {\n        this.roles = [];\n        data.data.forEach((role, v) => {\n            this.roles.push(new Role(role));\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Room {\n    id: number;\n    roomId: string;\n    name: string;\n    bookingEmail: string;\n    sitting: string;\n    currentStatus: string;\n\n    constructor(room: {\n        id: number,\n        room_id: string,\n        name: string,\n        booking_email: string,\n        sitting: string,\n        current_status: string\n    }) {\n        this.id = room.id;\n        this.roomId = room.room_id;\n        this.name = room.name;\n        this.bookingEmail = room.booking_email;\n        this.sitting = room.sitting;\n        this.currentStatus = room.current_status;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'room'\n})\nexport class RoomCapabilityPipe implements PipeTransform {\n\n  transform(value: [], ...args: unknown[]): Array<string> {\n    return this.getOnlyRooms(value);\n  }\n\n  protected getOnlyRooms(caps: []): Array<string> {\n    return caps.filter((cap: string): boolean => cap.includes('conf_room')).map((cap: string) => cap.replace('conf_room_', ''));\n  }\n\n}\n","export class User {\n  public capabilities: [string];\n  public details: { name: string; } | undefined;\n  public role: string | undefined;\n\n  constructor(res: {\n    id: number,\n    name: string,\n    emp_id: string,\n    email: string,\n    position: string,\n    team: string,\n    role_id: number,\n    phone: string,\n    role: {\n      id: number,\n      title: string,\n      capabilities: [string]\n    }\n  }) {\n    this.capabilities = res.role.capabilities;\n    this.role = res.role.title;\n    this.details = {name: res.name};\n\n  }\n\n\n  public getCapabilities(): [string] {\n    return this.capabilities;\n  }\n\n\n  public getName(): string {\n    return (this.details?.name) as string;\n  }\n\n  public getRole(): string {\n    return this.role as string;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable, Subscription} from 'rxjs';\nimport {User} from './user.model';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() {\n  }\n\n  public getUrl(endpoint: string): string {\n    return 'http://13.233.161.214:81' + endpoint;\n  }\n\n  public getResponseData(response: { success: boolean, data: any, message: string }): any {\n    return response.data;\n  }\n\n  public isResponseSuccess(response: { success: boolean, data: any, message: string }): boolean {\n    return (response.success === undefined) ? false : response.success;\n  }\n\n  public getResponseMessage(response: { success: boolean, data: any, message: string }): string {\n    return response.message;\n  }\n\n\n\n\n}\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {Room} from '../../../models/room.model';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {RoomService} from '../../../services/room.service';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-room-form',\n  templateUrl: './room-form.component.html',\n  styleUrls: ['./room-form.component.css']\n})\nexport class RoomFormComponent implements OnInit, OnDestroy {\n  public roomAddEvent: Subscription;\n  public roomUpdateEvent: Subscription;\n  public editMode = false;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(@Inject(MAT_DIALOG_DATA) public room: Room, public roomService: RoomService, public dialog: MatDialogRef<RoomFormComponent>) {\n    this.roomAddEvent = this.roomService.roomAddEvent.subscribe((rm: Room) => {\n      this.dialog.close();\n    });\n\n    this.roomUpdateEvent = this.roomService.roomUpdateEvent.subscribe((rm: Room) => {\n      this.dialog.close();\n    });\n  }\n\n  ngOnInit(): void {\n    this.editMode = (this.room.id > 0);\n  }\n\n  addRoom(): void {\n    this.roomService.addRoom(this.room);\n  }\n\n  updateRoom(): void {\n    this.roomService.updateRoom(this.room);\n  }\n\n  ngOnDestroy(): void {\n    this.roomAddEvent.unsubscribe();\n    this.roomUpdateEvent.unsubscribe();\n  }\n\n}\n","<h2 mat-dialog-title>Room</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <form>\n    <div class=\"form-group\">\n      <label>Room ID</label>\n      <input type=\"text\" [(ngModel)]=\"room.roomId\" name=\"roomId\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label>Name</label>\n      <input type=\"text\" [(ngModel)]=\"room.name\" name=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label>Booking Email</label>\n      <input type=\"email\" [(ngModel)]=\"room.bookingEmail\" name=\"bookingEmail\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label>Sitting</label>\n      <input type=\"number\" [(ngModel)]=\"room.sitting\" name=\"sitting\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label>Current Status</label>\n      <select [(ngModel)]=\"room.currentStatus\" name=\"currentStatus\" class=\"form-control\">\n        <option value=\"\">Select State</option>\n        <option value=\"booked\">Booked</option>\n        <option value=\"available\">Available</option>\n      </select>\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"editMode?updateRoom():addRoom()\">Save</button>\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Role} from '../../models/role.model';\nimport {Subscription} from 'rxjs';\nimport {RoleService} from '../../services/role.service';\nimport {EditRoleComponent} from './edit-role/edit-role.component';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-role',\n    templateUrl: './role.component.html',\n    styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit, OnDestroy {\n    displayedColumns: string[] = ['title', 'capabilities', 'actions'];\n    public roles: Role[] = [];\n    public capabilities: string[] = [];\n    protected roleEvent: Subscription;\n    protected capabilityEvent: Subscription;\n    public isLoading = true;\n\n    constructor(private roleService: RoleService, protected dialog: MatDialog) {\n        this.roleEvent = this.roleService.roleEvent.subscribe((roles: Role[]) => {\n            this.roles = roles;\n            this.isLoading = false;\n        });\n\n        this.capabilityEvent = this.roleService.capabilityEvent.subscribe((capabilities) => {\n            this.capabilities = capabilities;\n        });\n    }\n\n    ngOnInit(): void {\n        this.roleService.getCapabilities();\n        this.roleService.getRoles();\n    }\n\n    ngOnDestroy(): void {\n        this.roleEvent.unsubscribe();\n        this.capabilityEvent.unsubscribe();\n    }\n\n    onEditRole(role: Role): void {\n        this.dialog.open(EditRoleComponent, {data: role});\n    }\n\n    onaddRole(): void {\n        this.dialog.open(EditRoleComponent, {data: new Role({id: 0, title: '', capabilities: ['']})});\n    }\n\n    onDeleteRole(role: Role): void {\n        if (confirm('Are you sure ?')) {\n            this.roleService.deleteRole(role);\n        }\n    }\n\n\n}\n","<h2 mat-dialog-title>Roles</h2>\n\n<mat-dialog-content class=\"mat-typography\">\n    <mat-spinner align=\"center\" *ngIf=\"isLoading\"></mat-spinner>\n    <div class=\"d-flex justify-content-end\">\n        <button (click)=\"onaddRole()\" align=\"end\" *ngIf=\"!isLoading\" mat-stroked-button color=\"primary\"\n                class=\"mt-2 mr-0\">\n            <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">add</mat-icon>\n            New Role\n        </button>\n    </div>\n    <table *ngIf=\"!isLoading\" mat-table [dataSource]=\"roles\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef> Title</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"capabilities\">\n            <th mat-header-cell *matHeaderCellDef> Associated Permissions</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span class=\"d-flex justify-content-between\">\n                    <span>\n                        <title class=\"d-block text-center text-secondary font-weight-400\">User</title>\n                        {{element.capabilities|employee}}\n                    </span>\n                    <span>\n                        <title class=\"d-block text-center text-secondary font-weight-400\">Room</title>\n                        {{element.capabilities|room}}\n                    </span>\n                </span>\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef class=\"text-right\"> Actions</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\n                 <span class=\"d-flex justify-content-around ml-2\">\n                    <span>\n                            <mat-icon (click)=\"onEditRole(element)\" class=\"text-warning\" aria-hidden=\"false\"\n                                      aria-label=\"Example home icon\">edit</mat-icon>\n                    </span>\n                     <span>\n                            <mat-icon (click)=\"onDeleteRole(element)\" aria-hidden=\"false\" class=\"text-danger\"\n                                      aria-label=\"Example home icon\">delete</mat-icon>\n                     </span>\n                 </span>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Room} from '../../models/room.model';\nimport {RoomService} from '../../services/room.service';\nimport {Subscription} from 'rxjs';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {RoomFormComponent} from './room-form/room-form.component';\nimport {AuthService} from '../../services/auth.service';\nimport {User} from '../../services/user.model';\n\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css']\n})\nexport class RoomComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = ['roomId', 'name', 'bookingEmail', 'sitting', 'currentStatus'];\n  public rooms: Room[] = [];\n  public roomFetcheEvent: Subscription;\n  public loginEvent: Subscription;\n\n  constructor(public roomService: RoomService, public dialog: MatDialog, public authService: AuthService) {\n    this.roomFetcheEvent = this.roomService.roomFetchEvent.subscribe((rooms: Room[]) => {\n      this.rooms = rooms;\n    });\n\n    this.loginEvent = this.authService.userLogin.subscribe((user: User) => {\n      if (this.authService.userCan('conf_room_edit') || this.authService.userCan('conf_room_delete')) {\n        this.displayedColumns.push('actions');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.roomService.getRooms();\n  }\n\n  addRoom(): void {\n    this.openDialog(new Room({\n      id: 0,\n      room_id: '',\n      name: '',\n      booking_email: '',\n      sitting: '',\n      current_status: ''\n    }));\n  }\n\n  editRoom(room: Room): void {\n    this.openDialog(room);\n  }\n\n  deleteRoom(room: Room): void {\n    if (confirm('Are you sure ?')) {\n      this.roomService.deleteRoom(room);\n    }\n  }\n\n  private openDialog(room: Room): void {\n    this.dialog.open(RoomFormComponent, {\n      data: {...room}\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    this.roomFetcheEvent.unsubscribe();\n    this.loginEvent.unsubscribe();\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"d-flex justify-content-end mb-2\">\n    <button *ngIf=\"authService.userCan('conf_room_create')\" (click)=\"addRoom()\" mat-stroked-button color=\"primary\"\n            class=\"mt-2 mr-0\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">add</mat-icon>\n      New Room\n    </button>\n  </div>\n  <mat-card>\n    <table mat-table [dataSource]=\"rooms\" class=\"w-100\">\n      <ng-container matColumnDef=\"roomId\">\n        <th mat-header-cell *matHeaderCellDef> Room ID</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.roomId}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bookingEmail\">\n        <th mat-header-cell *matHeaderCellDef> Booking Email</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.bookingEmail}} </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"sitting\">\n        <th mat-header-cell *matHeaderCellDef> Sitting</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.sitting}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"currentStatus\">\n        <th mat-header-cell *matHeaderCellDef> Current Status</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.currentStatus}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Action</th>\n        <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"d-flex w-100  justify-content-around pd-2\">\n                        <i *ngIf=\"authService.userCan('conf_room_edit')\" style=\"cursor: pointer\" (click)=\"editRoom(element)\" class=\"fa fa-pencil text-warning\"></i>\n                        <i *ngIf=\"authService.userCan('conf_room_delete')\" style=\"cursor: pointer\" (click)=\"deleteRoom(element)\" class=\"fa fa-trash text-danger\"></i>\n                    </span>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-card>\n</div>\n","export class Employee {\n  public id: number | undefined;\n  public name: string | undefined;\n  public empId: string | undefined;\n  public email: string | undefined;\n  public position: string | undefined;\n  public team: string | undefined;\n  public roleId: number;\n  public phone: string | undefined;\n\n  constructor(employee: {\n    id: number,\n    name: string,\n    emp_id: string,\n    email: string,\n    position: string,\n    team: string,\n    role_id: number,\n    phone: string,\n  }) {\n    this.id = employee.id;\n    this.name = employee.name;\n    this.empId = employee.emp_id;\n    this.email = employee.email;\n    this.position = employee.position;\n    this.team = employee.team;\n    this.roleId = employee.role_id;\n    this.phone = employee.phone;\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {RoleService} from '../../../services/role.service';\nimport {MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {Role} from '../../../models/role.model';\n\n@Component({\n    selector: 'app-edit-role',\n    templateUrl: './edit-role.component.html',\n    styleUrls: ['./edit-role.component.css']\n})\nexport class EditRoleComponent implements OnInit {\n    public isLoading = false;\n    public allCaps: string[] = [];\n    protected capEvent: Subscription;\n    public isEditMode = true;\n\n    constructor(private roleService: RoleService, @Inject(MAT_DIALOG_DATA) public role: Role) {\n        if (!role.id) {\n            this.isEditMode = false;\n        }\n        this.capEvent = this.roleService.capabilityEvent.subscribe((caps: string[]) => {\n            this.allCaps = caps;\n        });\n    }\n\n    ngOnInit(): void {\n        this.roleService.getCapabilities();\n    }\n\n    updateRole(): void {\n        this.roleService.updateRole(this.role);\n    }\n\n    addRole(): void {\n        this.roleService.addRole(this.role);\n    }\n\n}\n","<h2 mat-dialog-title>Roles</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <form>\n        <div class=\"form-group \">\n            <label>Role</label>\n            <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]=\"role.title\">\n        </div>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Permissions</mat-label>\n            <mat-select name=\"capabilities\" multiple [value]=\"role.capabilities\" [(ngModel)]=\"role.capabilities\">\n                <mat-option *ngFor=\"let cap of allCaps\" [value]=\"cap\">{{cap}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close (click)=\"isEditMode?updateRole():addRole()\">Save</button>\n    <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","<app-navbar></app-navbar>\n<app-login *ngIf=\"!isUserLoggedIn\"></app-login>\n<app-container *ngIf=\"isUserLoggedIn\"></app-container>\n<router-outlet></router-outlet>\n","import {Component} from '@angular/core';\nimport {AuthService} from './services/auth.service';\nimport {User} from './services/user.model';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    './app.component.css'\n  ]\n})\nexport class AppComponent {\n  public isUserLoggedIn = true;\n  protected userLoginEvent: Subscription;\n  protected userLogOutEvent: Subscription;\n\n  constructor(public authService: AuthService) {\n    this.userLoginEvent = this.authService.userLogin.subscribe((user: User) => {\n      this.isUserLoggedIn = true;\n    });\n\n    if (this.authService.isUserLoggedIn()) {\n      this.authService.getUserDetails();\n    } else {\n      this.isUserLoggedIn = false;\n    }\n\n    this.userLogOutEvent = this.authService.userLogout.subscribe((res) => {\n      this.isUserLoggedIn = false;\n    });\n  }\n\n  OnInit(): void {\n\n  }\n\n  OnDestroy(): void {\n    this.userLoginEvent.unsubscribe();\n    this.userLogOutEvent.unsubscribe();\n  }\n}\n","import {Component, Inject, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Employee} from '../../../models/employee.model';\nimport {Subscription} from 'rxjs';\nimport {EmployeeService} from '../../../services/employee.service';\nimport {RoleService} from '../../../services/role.service';\nimport {Role} from '../../../models/role.model';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Room} from '../../../models/room.model';\n\n@Component({\n  selector: 'app-employee-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit, OnDestroy {\n  public isLoading = false;\n  private roleEvent: Subscription;\n  private employeeAddEvent: Subscription;\n  private employeeUpdateEvent: Subscription;\n  public roles: Role[] = [];\n  public editMode = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public employee: Employee, private employeeService: EmployeeService, protected roleService: RoleService, public dialog: MatDialogRef<CreateComponent>) {\n    this.roleEvent = this.roleService.roleEvent.subscribe((roles) => {\n      this.roles = roles;\n    });\n    this.employeeAddEvent = this.employeeService.addEvent.subscribe((emp) => {\n      this.dialog.close();\n    });\n\n    this.employeeUpdateEvent = this.employeeService.editEvent.subscribe((emp) => {\n      this.dialog.close();\n    });\n  }\n\n  ngOnInit(): void {\n    this.roleService.getRoles();\n    this.editMode = (this.employee.id !== undefined && this.employee.id > 0);\n  }\n\n  public createEmployee(): void {\n    this.employeeService.addEmployee(this.employee);\n  }\n\n  editEmployee(): void {\n    this.isLoading = true;\n    this.employeeService.editEmployee(this.employee);\n  }\n\n  ngOnDestroy(): void {\n    this.roleEvent.unsubscribe();\n    this.employeeAddEvent.unsubscribe();\n  }\n}\n","<h2 mat-dialog-title>Add Employee</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>EmpId</label>\n        <input required type=\"text\" name=\"empId\" id=\"emp-id\" class=\"form-control\"\n               [(ngModel)]=\"employee.empId\">\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input required type=\"text\" name=\"name\" id=\"name\" class=\"form-control\"\n               [(ngModel)]=\"employee.name\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Email</label>\n        <input required type=\"email\" name=\"email\" id=\"email\" class=\"form-control\"\n               [(ngModel)]=\"employee.email\">\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Position</label>\n        <input required type=\"text\" name=\"position\" id=\"position\" class=\"form-control\"\n               [(ngModel)]=\"employee.position\">\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Team</label>\n        <input required type=\"text\" name=\"team\" id=\"team\" class=\"form-control\"\n               [(ngModel)]=\"employee.team\">\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Phone</label>\n        <input required type=\"text\" name=\"phone\" id=\"phone\" class=\"form-control\"\n               [(ngModel)]=\"employee.phone\">\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>Role</label>\n    <select class=\"form-control\" name=\"roleId\" [(ngModel)]=\"employee.roleId\">\n      <option *ngFor=\"let role of roles\" [value]=\"role.id\">{{role.title}}</option>\n    </select>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"editMode?editEmployee():createEmployee()\">Save</button>\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {ContainerComponent} from './container/container.component';\nimport {EmployeeComponent} from './container/employee/employee.component';\nimport {RoomComponent} from './container/room/room.component';\nimport {CreateComponent} from './container/employee/create/create.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {RoleComponent} from './navbar/role/role.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatButtonModule} from '@angular/material/button';\nimport {EmployeeCapabilityPipe} from './pipes/employee-capability.pipe';\nimport {RoomCapabilityPipe} from './pipes/room-capability.pipe';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {EditRoleComponent} from './navbar/role/edit-role/edit-role.component';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCardModule} from '@angular/material/card';\nimport {RoomFormComponent} from './container/room/room-form/room-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NavbarComponent,\n    ContainerComponent,\n    EmployeeComponent,\n    RoomComponent,\n    CreateComponent,\n    RoleComponent,\n    EmployeeCapabilityPipe,\n    RoomCapabilityPipe,\n    EditRoleComponent,\n    RoomFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatTableModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    MatIconModule,\n    MatTabsModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export class Role {\n    public title: string;\n    public id: number;\n    public capabilities: [string];\n\n    constructor(role: { id: number; title: string; capabilities: [string] }) {\n        this.id = role.id;\n        this.title = role.title;\n        this.capabilities = role.capabilities;\n    }\n}","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {User} from '../services/user.model';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {RoleService} from '../services/role.service';\nimport {RoleComponent} from './role/role.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  public isUserLoggedIn = false;\n  public user: User | undefined;\n  public logoutEvent: Subscription;\n  public logInEvent: Subscription;\n  public displayRole = false;\n\n  constructor(public authService: AuthService, protected roleService: RoleService, public dialog: MatDialog) {\n    this.logInEvent = this.authService.userLogin.subscribe((user: User) => {\n      this.user = user;\n      this.isUserLoggedIn = true;\n    });\n    this.logoutEvent = this.authService.userLogout.subscribe(() => {\n      this.isUserLoggedIn = false;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  launchRoleModel(): void {\n    this.dialog.open(RoleComponent);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n\n  ngOnDestroy(): void {\n    this.logInEvent.unsubscribe();\n    this.logoutEvent.unsubscribe();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light text-primary bg-white\" style=\"border-bottom: 2px solid #007bff \">\n  <a class=\"navbar-brand\" href=\"/\"><strong>People</strong>Portal</a>\n\n  <div class=\" navbar-collapse\" id=\"navbarSupportedContent\">\n    <div class=\"row w-100 align-items-center\">\n      <div class=\"col-md-7\">\n      </div>\n      <div class=\"col-md-2\">\n        <div class=\"pd-2 d-inline mr-2 d-flex align-items-center justify-content-end\"\n             *ngIf=\"(this.authService.userCan('employee_delete') || this.authService.userCan('employee_edit'))\">\n          <button *ngIf=\"isUserLoggedIn\" (click)=\"launchRoleModel()\" mat-stroked-button color=\"primary\">\n            <mat-icon aria-hidden=\"false\" aria-label=\"Roles\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24\"\n                   viewBox=\"0 0 24 24\" width=\"24\">\n                <g>\n                  <path d=\"M0,0h24v24H0V0z\" fill=\"none\"/>\n                  <path\n                    d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n                </g>\n              </svg>\n            </mat-icon>\n            Roles\n          </button>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n\n        <div class=\"pd-2 d-inline mr-2 d-flex align-items-center justify-content-end\"\n             *ngIf=\"isUserLoggedIn\">\n          <div class=\"p-2\">\n            <mat-icon aria-hidden=\"false\" aria-label=\"Roles\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                <path\n                  d=\"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"/>\n              </svg>\n            </mat-icon>\n\n          </div>\n          <div class=\"p-2\">\n            <span class=\"\">\n              {{(user === undefined) ? '' : user.getName()|titlecase}} <small\n              class=\"d-block\">{{(user === undefined) ? '' : user.getRole()|titlecase}}</small>\n            </span>\n          </div>\n          <div class=\"p-2\">\n            <button (click)=\"logout()\" mat-stroked-button color=\"primary\">\n              Logout\n              <mat-icon aria-hidden=\"false\" aria-label=\"Roles\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path\n                    d=\"M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z\"/>\n                </svg>\n              </mat-icon>\n            </button>\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  </div>\n</nav>\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {Observable, ObservableInput, Subscription} from 'rxjs';\nimport {User} from './user.model';\nimport {DataService} from './data.service';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  public user: User | undefined;\n  public userLogin: EventEmitter<any> = new EventEmitter();\n  public userLoginFailed: EventEmitter<any> = new EventEmitter();\n  public userLogout: EventEmitter<any> = new EventEmitter();\n\n  constructor(private http: HttpClient, private dataService: DataService) {\n  }\n\n  private getUrl(endpoint: string): string {\n    return this.dataService.getUrl(endpoint);\n  }\n\n  public login(email: string, password: string): void {\n    this.http.post<User>(this.getUrl('/api/login'), {email, password}).subscribe((res: any) => {\n      if (res.success) {\n        localStorage.setItem('access_token', res.data.access_token as string);\n        localStorage.setItem('refresh_token', res.data.refresh_token as string);\n        this.getUserDetails();\n      } else {\n        this.userLoginFailed.emit('Login failed');\n        alert('Invalid Credentials!');\n      }\n    });\n  }\n\n  public isUserLoggedIn(): boolean {\n    return (this.getAccessToken() !== null);\n  }\n\n  getUserDetails(): void {\n    this.http.get<User>(this.dataService.getUrl('/api/user'), {headers: this.getAuthHeaders()}).subscribe((res: any) => {\n      if (res.success) {\n        this.user = new User(res.data);\n        this.userLogin.emit(this.user);\n      }\n    }, (err) => {\n      this.handelErrors(err);\n    });\n  }\n\n  public getAccessToken(): string {\n    return localStorage.getItem('access_token') as string;\n  }\n\n  public getRefreshToken(): string {\n    return localStorage.getItem('refresh_token') as string;\n  }\n\n  public logout(): void {\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('access_token');\n    this.userLogout.emit('User Logged out.');\n  }\n\n  public getAuthHeaders(): HttpHeaders {\n    return new HttpHeaders()\n      .set('content-type', 'application/json')\n      .set('Access-Control-Allow-Origin', '*')\n      .set('Access-Control-Allow-Headers', '*')\n      .set('Accept', 'application/json, text/plain')\n      .set('Authorization', 'Bearer ' + this.getAccessToken());\n  }\n\n  public userCan(cap: string): boolean {\n    return ((this.user !== undefined) && (this.user.capabilities.indexOf(cap) !== -1));\n  }\n\n  public handelErrors(err: HttpErrorResponse): void {\n    switch (err.status) {\n      case 401:\n        this.logout();\n        break;\n    }\n  }\n}\n\n","import {Component, OnInit, OnDestroy, AfterViewInit, OnChanges} from '@angular/core';\nimport {EmployeeService} from '../../services/employee.service';\nimport {Employee} from '../../models/employee.model';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../../services/auth.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateComponent} from './create/create.component';\nimport {RoleService} from '../../services/role.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit, OnDestroy {\n  public employees: Employee[] = [];\n  public editMode = false;\n  public createMode = false;\n  public displayedColumns = ['ID', 'name', 'email', 'position', 'team', 'phone', 'action'];\n\n  private setEmployeeSubscription: Subscription;\n  private editEmployeeSubscription: Subscription;\n  private deleteEmployeeSubscription: Subscription;\n  private addEmployeeSubscription: Subscription;\n\n  public employee: Employee = new Employee(\n    {\n      id: 0,\n      name: '',\n      emp_id: '',\n      email: '',\n      position: '',\n      team: '',\n      role_id: 0,\n      phone: '',\n    }\n  );\n\n  constructor(public employeeService: EmployeeService, public authService: AuthService, public dialog: MatDialog) {\n    this.setEmployeeSubscription = this.employeeService.setEmployees.subscribe((employees: Employee[]) => {\n      this.employees = employees;\n    });\n    this.editEmployeeSubscription = this.employeeService.editEvent.subscribe((employee) => {\n      this.editMode = false;\n      this.employeeService.fetchData();\n      this.dialog.closeAll();\n    });\n    this.deleteEmployeeSubscription = this.employeeService.deleteEvent.subscribe((employee: Employee) => {\n      this.employeeService.fetchData();\n    });\n\n    this.addEmployeeSubscription = this.employeeService.addEvent.subscribe((employee: Employee) => {\n      this.createMode = false;\n      this.employeeService.fetchData();\n    });\n  }\n\n  ngOnInit(): void {\n    this.employeeService.fetchData();\n  }\n\n  editEmployee(employee: Employee): void {\n    this.dialog.open(CreateComponent, {data: employee});\n  }\n\n  addEmployee(): void {\n    this.dialog.open(CreateComponent, {\n      data: new Employee({\n        id: 0,\n        name: '',\n        emp_id: '',\n        email: '',\n        position: '',\n        team: '',\n        role_id: 2,\n        phone: '',\n      })\n    });\n  }\n\n  deleteEmployee(employee: Employee): void {\n    if (confirm('Are you sure ?')) {\n      this.employeeService.deleteEmployee(employee);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.setEmployeeSubscription.unsubscribe();\n    this.editEmployeeSubscription.unsubscribe();\n    this.deleteEmployeeSubscription.unsubscribe();\n    this.addEmployeeSubscription.unsubscribe();\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"d-flex justify-content-end mb-2\">\n    <button *ngIf=\"authService.userCan('employee_create')\" (click)=\"addEmployee()\" mat-stroked-button color=\"primary\"\n            class=\"mt-2 mr-0\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">add</mat-icon>\n      New Employee\n    </button>\n  </div>\n  <div class=\"col-sm-12\">\n\n    <mat-card>\n      <table mat-table [dataSource]=\"employees\" class=\"w-100\">\n        <ng-container matColumnDef=\"ID\">\n          <th mat-header-cell *matHeaderCellDef> Employee Id</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.empId}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Name</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef>Email</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef>Position</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"team\">\n          <th mat-header-cell *matHeaderCellDef> Team</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.team}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"phone\">\n          <th mat-header-cell *matHeaderCellDef> Phone</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Action</th>\n          <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"d-flex w-100  justify-content-around pd-2\">\n                        <i *ngIf=\"authService.userCan('employee_edit')\" style=\"cursor: pointer\"\n                           (click)=\"editEmployee(element)\" class=\"fa fa-pencil text-warning\"></i>\n                        <i *ngIf=\"authService.userCan('employee_delete')\" style=\"cursor: pointer\"\n                           (click)=\"deleteEmployee(employee)\" class=\"fa fa-trash text-danger\"></i>\n                    </span>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </mat-card>\n  </div>\n</div>\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Employee} from '../models/employee.model';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {DataService} from './data.service';\nimport {AuthService} from './auth.service';\nimport {HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EmployeeService {\n    public employees: Employee[] = [];\n    public setEmployees: EventEmitter<any> = new EventEmitter();\n    public editEvent: EventEmitter<Employee> = new EventEmitter();\n    public deleteEvent: EventEmitter<Employee> = new EventEmitter();\n    public addEvent: EventEmitter<Employee> = new EventEmitter();\n    protected allCapabilities: [] = [];\n\n\n    constructor(private http: HttpClient, private dataService: DataService, private authService: AuthService) {\n        this.fetchData();\n    }\n\n    public fetchData(): void {\n        this.http.get(this.dataService.getUrl('/api/employee'), {headers: this.getHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.setData(this.dataService.getResponseData(res));\n            } else {\n                alert('Error while loading the employee');\n            }\n        });\n    }\n\n    getEmployees(): Employee[] | undefined {\n        return this.employees;\n    }\n\n    private setData(data: { current_page: number, data: [] }): void {\n        this.employees = [];\n        data.data.forEach((employee, index) => {\n            this.employees.push(new Employee(employee));\n        });\n        this.setEmployees.emit(this.employees);\n    }\n\n    addEmployee(employee: Employee): void {\n      // tslint:disable-next-line:max-line-length\n        this.http.post(this.dataService.getUrl('/api/employee'), employee, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                const emp: Employee = new Employee(this.dataService.getResponseData(res));\n                this.employees.push(emp);\n                this.addEvent.emit(emp);\n            } else {\n                alert('Error while saving employee. Check if Email id is already exists');\n            }\n        });\n    }\n\n    editEmployee(employee: Employee): void {\n        this.http.put(this.dataService.getUrl('/api/employee/' + employee.id), employee, {headers: this.getHeaders()}).subscribe((res) => {\n            this.editEvent.emit(employee);\n        });\n    }\n\n    deleteEmployee(employee: Employee): void {\n        this.http.delete(this.dataService.getUrl('/api/employee/' + employee.id), {headers: this.getHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.deleteEvent.emit(employee);\n            }\n        });\n    }\n\n    private getHeaders(): HttpHeaders {\n        return this.authService.getAuthHeaders();\n    }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-container',\n    templateUrl: './container.component.html',\n    styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<mat-tab-group class=\"mt-2\">\n  <mat-tab label=\"Employees\" class=\"mb-2\">\n    <app-employee></app-employee>\n  </mat-tab>\n  <mat-tab label=\"Rooms\" class=\"mb-2\">\n    <app-room></app-room>\n\n  </mat-tab>\n</mat-tab-group>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container\">\n  <div class=\"row justify-content-center p-5\">\n    <div class=\"col-md-6 col-md-offset-3\">\n      <div class=\"card card-primary\">\n        <div class=\"card-header bg-primary text-white\">Login</div>\n        <div class=\"card-body\">\n          <form autocomplete=\"off\" (ngSubmit)=\"login(loginForm)\" #loginForm=\"ngForm\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                required\n                ngModel\n              />\n            </div>\n            <div class=\"form-group mb-2\">\n              <label for=\"password\">Password</label>\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                id=\"password\"\n                name=\"password\"\n                ngModel\n                required\n              />\n            </div>\n            <div class=\"form-group mt-4\">\n              <button d class=\"btn btn-primary pull-right\" [disabled]=\"loginForm.invalid\">Login <i\n                *ngIf=\"isLoading\"\n                class=\"fa fa-spinner fa-spin\"></i>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {AuthService} from '../services/auth.service';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  public isLoading = false;\n  public loginEvent: Subscription;\n  public loginFailedEvent: Subscription;\n\n  constructor(private authService: AuthService) {\n    this.loginEvent = this.authService.userLogin.subscribe((res) => {\n      this.isLoading = false;\n    });\n    this.loginFailedEvent = this.authService.userLoginFailed.subscribe((res) => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  public login(loginForm: NgForm): any {\n    this.isLoading = true;\n    this.authService.login(loginForm.value.email, loginForm.value.password);\n  }\n\n  ngOnDestroy(): void {\n    this.loginEvent.unsubscribe();\n  }\n\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Room} from '../models/room.model';\nimport {DataService} from './data.service';\nimport {AuthService} from './auth.service';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RoomService {\n    public rooms: Room[] = [];\n    public roomFetchEvent: EventEmitter<any> = new EventEmitter();\n    public roomAddEvent: EventEmitter<any> = new EventEmitter();\n    public roomUpdateEvent: EventEmitter<any> = new EventEmitter();\n\n    constructor(public dataService: DataService, public authService: AuthService, private http: HttpClient) {\n    }\n\n    private setData(data: {\n        current_page: number,\n        data: [],\n        first_page_url: string,\n        from: number,\n        last_page: number,\n        last_page_url: string | null,\n        next_page_url: null | string,\n        path: string,\n        per_page: number,\n        prev_page_url: null | string,\n        to: number,\n        total: number\n    }): Room[] {\n        this.rooms = [];\n        data.data.forEach((room: any) => {\n            this.rooms.push(new Room(room));\n        });\n        return this.rooms;\n    }\n\n    public getRooms(): void {\n        // tslint:disable-next-line:max-line-length\n        this.http.get<Room>(this.dataService.getUrl('/api/conference-room'), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.roomFetchEvent.emit(this.setData(this.dataService.getResponseData(res)));\n            } else {\n                alert('Error While fetching room');\n            }\n        });\n    }\n\n    addRoom(room: Room): void {\n        this.http.post<Room>(this.dataService.getUrl('/api/conference-room'), room, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                const _room = new Room(this.dataService.getResponseData(res));\n                this.rooms.push(_room);\n                this.roomAddEvent.emit(_room);\n                this.getRooms();\n            } else {\n                alert('Error While adding room');\n            }\n        });\n    }\n\n    updateRoom(room: Room): void {\n        this.http.put<Room>(this.dataService.getUrl('/api/conference-room/' + room.id), room, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.roomUpdateEvent.emit(room);\n                this.getRooms();\n            } else {\n                alert('Error While updating room');\n            }\n        });\n    }\n\n    deleteRoom(room: Room): void {\n        this.http.delete<Room>(this.dataService.getUrl('/api/conference-room/' + room.id), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.getRooms();\n            } else {\n                alert('Error While deleting room');\n            }\n        });\n    }\n\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'employee'\n})\nexport class EmployeeCapabilityPipe implements PipeTransform {\n    protected values: [] = [];\n\n    transform(value: [], ...args: unknown[]): Array<string> {\n        return this.getOnlyEmployees(value);\n    }\n\n    protected getOnlyEmployees(caps: []): Array<string> {\n        return caps.filter((cap: string): boolean => cap.includes('employee')).map((cap: string) => cap.replace('employee_', ''));\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}