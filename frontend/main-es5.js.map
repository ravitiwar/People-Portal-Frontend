{"version":3,"sources":["webpack:///src/app/services/role.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/models/room.model.ts","webpack:///src/app/pipes/room-capability.pipe.ts","webpack:///src/app/services/user.model.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/container/room/room-form/room-form.component.ts","webpack:///src/app/container/room/room-form/room-form.component.html","webpack:///src/app/navbar/role/role.component.ts","webpack:///src/app/navbar/role/role.component.html","webpack:///src/app/container/room/room.component.ts","webpack:///src/app/container/room/room.component.html","webpack:///src/app/models/employee.model.ts","webpack:///src/app/navbar/role/edit-role/edit-role.component.ts","webpack:///src/app/navbar/role/edit-role/edit-role.component.html","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/container/employee/create/create.component.ts","webpack:///src/app/container/employee/create/create.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/role.model.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/container/employee/employee.component.ts","webpack:///src/app/container/employee/employee.component.html","webpack:///src/app/services/employee.service.ts","webpack:///src/app/container/container.component.ts","webpack:///src/app/container/container.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/services/room.service.ts","webpack:///src/app/pipes/employee-capability.pipe.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["RoleService","http","authService","dataService","allCapabilities","capabilityEvent","roleEvent","roleUpdateEvent","roleAddEvent","roles","get","getUrl","headers","getAuthHeaders","subscribe","res","setData","getResponseData","emit","data","forEach","k","v","push","role","put","id","isResponseSuccess","getRoles","alert","post","environment","production","Room","room","roomId","room_id","name","bookingEmail","booking_email","sitting","currentStatus","current_status","RoomCapabilityPipe","value","getOnlyRooms","caps","filter","cap","includes","map","replace","User","capabilities","title","details","DataService","endpoint","response","success","undefined","message","RoomFormComponent","roomService","dialog","editMode","roomAddEvent","rm","close","roomUpdateEvent","addRoom","updateRoom","unsubscribe","RoleComponent","roleService","displayedColumns","isLoading","getCapabilities","open","confirm","deleteRole","RoomComponent","rooms","roomFetcheEvent","roomFetchEvent","loginEvent","userLogin","user","userCan","getRooms","openDialog","deleteRoom","Employee","employee","empId","emp_id","email","position","team","roleId","role_id","phone","EditRoleComponent","allCaps","isEditMode","capEvent","updateRole","addRole","AppComponent","isUserLoggedIn","userLoginEvent","getUserDetails","userLogOutEvent","userLogout","CreateComponent","employeeService","employeeAddEvent","addEvent","emp","employeeUpdateEvent","editEvent","addEmployee","editEmployee","createEmployee","AppModule","Role","NavbarComponent","displayRole","logInEvent","logoutEvent","logout","AuthService","userLoginFailed","password","localStorage","setItem","access_token","refresh_token","getAccessToken","err","handelErrors","getItem","removeItem","set","indexOf","status","EmployeeComponent","employees","createMode","setEmployeeSubscription","setEmployees","editEmployeeSubscription","fetchData","closeAll","deleteEmployeeSubscription","deleteEvent","addEmployeeSubscription","deleteEmployee","EmployeeService","getHeaders","index","ContainerComponent","routes","AppRoutingModule","forRoot","LoginComponent","loginFailedEvent","loginForm","login","RoomService","_room","EmployeeCapabilityPipe","values","getOnlyEmployees","bootstrapModule","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {EventEmitter, Injectable} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {HttpClient} from '@angular/common/http';\nimport {DataService} from './data.service';\nimport {Role} from '../models/role.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RoleService {\n    public allCapabilities: [] = [];\n    public capabilityEvent: EventEmitter<any> = new EventEmitter<any>();\n    public roleEvent: EventEmitter<any> = new EventEmitter();\n    public roleUpdateEvent: EventEmitter<any> = new EventEmitter();\n    public roleAddEvent: EventEmitter<any> = new EventEmitter();\n\n    public roles: Role[] = [];\n\n    constructor(protected http: HttpClient, protected authService: AuthService, private dataService: DataService) {\n    }\n\n    public getRoles(): void {\n        this.http.get(this.dataService.getUrl('/api/role'), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            this.setData(this.dataService.getResponseData(res));\n            this.roleEvent.emit(this.roles);\n        });\n    }\n\n    public getCapabilities(): void {\n        this.http.get(this.dataService.getUrl('/api/capabilities'), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            const data: [] = this.dataService.getResponseData(res);\n            this.allCapabilities = [];\n            data.forEach((k, v) => {\n                this.allCapabilities.push(k);\n            });\n            this.capabilityEvent.emit(this.allCapabilities);\n        });\n    }\n\n    public updateRole(role: Role): void {\n        // tslint:disable-next-line:max-line-length\n        this.http.put(this.dataService.getUrl('/api/role/' + role.id), role, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.roleUpdateEvent.emit(role);\n                this.getRoles();\n            } else {\n                alert('Error while updating the role, Please try again');\n            }\n        });\n    }\n\n    public addRole(role: Role): void {\n        // tslint:disable-next-line:max-line-length\n        this.http.post(this.dataService.getUrl('/api/role'), role, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.roleAddEvent.emit(role);\n                this.getRoles();\n            } else {\n                alert('Error while adding the role, Please try again');\n            }\n        });\n    }\n\n    public deleteRole(role: Role): void {\n        // tslint:disable-next-line:max-line-length\n        this.http.delete(this.dataService.getUrl('/api/role/' + role.id), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.getRoles();\n            } else {\n                alert('Error! while deletig the Role, Please try again.');\n            }\n        });\n    }\n\n    private setData(data: {\n        current_page: number,\n        data: [{\n            id: number,\n            title: string,\n            capabilities: [string]\n        }];\n        first_page_url: string,\n        from: number,\n        last_page: number,\n        last_page_url: string,\n        next_page_url: string | null,\n        path: string,\n        per_page: number,\n        prev_page_url: string | null,\n        to: number,\n        total: number\n    }): void {\n        this.roles = [];\n        data.data.forEach((role, v) => {\n            this.roles.push(new Role(role));\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Room {\n    id: number;\n    roomId: string;\n    name: string;\n    bookingEmail: string;\n    sitting: string;\n    currentStatus: string;\n\n    constructor(room: {\n        id: number,\n        room_id: string,\n        name: string,\n        booking_email: string,\n        sitting: string,\n        current_status: string\n    }) {\n        this.id = room.id;\n        this.roomId = room.room_id;\n        this.name = room.name;\n        this.bookingEmail = room.booking_email;\n        this.sitting = room.sitting;\n        this.currentStatus = room.current_status;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'room'\n})\nexport class RoomCapabilityPipe implements PipeTransform {\n\n  transform(value: [], ...args: unknown[]): Array<string> {\n    return this.getOnlyRooms(value);\n  }\n\n  protected getOnlyRooms(caps: []): Array<string> {\n    return caps.filter((cap: string): boolean => cap.includes('conf_room')).map((cap: string) => cap.replace('conf_room_', ''));\n  }\n\n}\n","export class User {\n  public capabilities: [string];\n  public details: { name: string; } | undefined;\n  public role: string | undefined;\n\n  constructor(res: {\n    id: number,\n    name: string,\n    emp_id: string,\n    email: string,\n    position: string,\n    team: string,\n    role_id: number,\n    phone: string,\n    role: {\n      id: number,\n      title: string,\n      capabilities: [string]\n    }\n  }) {\n    this.capabilities = res.role.capabilities;\n    this.role = res.role.title;\n    this.details = {name: res.name};\n\n  }\n\n\n  public getCapabilities(): [string] {\n    return this.capabilities;\n  }\n\n\n  public getName(): string {\n    return (this.details?.name) as string;\n  }\n\n  public getRole(): string {\n    return this.role as string;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable, Subscription} from 'rxjs';\nimport {User} from './user.model';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() {\n  }\n\n  public getUrl(endpoint: string): string {\n    return 'http://13.233.161.214:81' + endpoint;\n  }\n\n  public getResponseData(response: { success: boolean, data: any, message: string }): any {\n    return response.data;\n  }\n\n  public isResponseSuccess(response: { success: boolean, data: any, message: string }): boolean {\n    return (response.success === undefined) ? false : response.success;\n  }\n\n  public getResponseMessage(response: { success: boolean, data: any, message: string }): string {\n    return response.message;\n  }\n\n\n\n\n}\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {Room} from '../../../models/room.model';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {RoomService} from '../../../services/room.service';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-room-form',\n  templateUrl: './room-form.component.html',\n  styleUrls: ['./room-form.component.css']\n})\nexport class RoomFormComponent implements OnInit, OnDestroy {\n  public roomAddEvent: Subscription;\n  public roomUpdateEvent: Subscription;\n  public editMode = false;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(@Inject(MAT_DIALOG_DATA) public room: Room, public roomService: RoomService, public dialog: MatDialogRef<RoomFormComponent>) {\n    this.roomAddEvent = this.roomService.roomAddEvent.subscribe((rm: Room) => {\n      this.dialog.close();\n    });\n\n    this.roomUpdateEvent = this.roomService.roomUpdateEvent.subscribe((rm: Room) => {\n      this.dialog.close();\n    });\n  }\n\n  ngOnInit(): void {\n    this.editMode = (this.room.id > 0);\n  }\n\n  addRoom(): void {\n    this.roomService.addRoom(this.room);\n  }\n\n  updateRoom(): void {\n    this.roomService.updateRoom(this.room);\n  }\n\n  ngOnDestroy(): void {\n    this.roomAddEvent.unsubscribe();\n    this.roomUpdateEvent.unsubscribe();\n  }\n\n}\n","<h2 mat-dialog-title>Room</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <form>\n    <div class=\"form-group\">\n      <label>Room ID</label>\n      <input type=\"text\" [(ngModel)]=\"room.roomId\" name=\"roomId\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label>Name</label>\n      <input type=\"text\" [(ngModel)]=\"room.name\" name=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label>Booking Email</label>\n      <input type=\"email\" [(ngModel)]=\"room.bookingEmail\" name=\"bookingEmail\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label>Sitting</label>\n      <input type=\"number\" [(ngModel)]=\"room.sitting\" name=\"sitting\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <label>Current Status</label>\n      <select [(ngModel)]=\"room.currentStatus\" name=\"currentStatus\" class=\"form-control\">\n        <option value=\"\">Select State</option>\n        <option value=\"booked\">Booked</option>\n        <option value=\"available\">Available</option>\n      </select>\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"editMode?updateRoom():addRoom()\">Save</button>\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Role} from '../../models/role.model';\nimport {Subscription} from 'rxjs';\nimport {RoleService} from '../../services/role.service';\nimport {EditRoleComponent} from './edit-role/edit-role.component';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-role',\n    templateUrl: './role.component.html',\n    styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit, OnDestroy {\n    displayedColumns: string[] = ['title', 'capabilities', 'actions'];\n    public roles: Role[] = [];\n    public capabilities: string[] = [];\n    protected roleEvent: Subscription;\n    protected capabilityEvent: Subscription;\n    public isLoading = true;\n\n    constructor(private roleService: RoleService, protected dialog: MatDialog) {\n        this.roleEvent = this.roleService.roleEvent.subscribe((roles: Role[]) => {\n            this.roles = roles;\n            this.isLoading = false;\n        });\n\n        this.capabilityEvent = this.roleService.capabilityEvent.subscribe((capabilities) => {\n            this.capabilities = capabilities;\n        });\n    }\n\n    ngOnInit(): void {\n        this.roleService.getCapabilities();\n        this.roleService.getRoles();\n    }\n\n    ngOnDestroy(): void {\n        this.roleEvent.unsubscribe();\n        this.capabilityEvent.unsubscribe();\n    }\n\n    onEditRole(role: Role): void {\n        this.dialog.open(EditRoleComponent, {data: role});\n    }\n\n    onaddRole(): void {\n        this.dialog.open(EditRoleComponent, {data: new Role({id: 0, title: '', capabilities: ['']})});\n    }\n\n    onDeleteRole(role: Role): void {\n        if (confirm('Are you sure ?')) {\n            this.roleService.deleteRole(role);\n        }\n    }\n\n\n}\n","<h2 mat-dialog-title>Roles</h2>\n\n<mat-dialog-content class=\"mat-typography\">\n    <mat-spinner align=\"center\" *ngIf=\"isLoading\"></mat-spinner>\n    <div class=\"d-flex justify-content-end\">\n        <button (click)=\"onaddRole()\" align=\"end\" *ngIf=\"!isLoading\" mat-stroked-button color=\"primary\"\n                class=\"mt-2 mr-0\">\n            <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">add</mat-icon>\n            New Role\n        </button>\n    </div>\n    <table *ngIf=\"!isLoading\" mat-table [dataSource]=\"roles\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef> Title</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"capabilities\">\n            <th mat-header-cell *matHeaderCellDef> Associated Permissions</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span class=\"d-flex justify-content-between\">\n                    <span>\n                        <title class=\"d-block text-center text-secondary font-weight-400\">User</title>\n                        {{element.capabilities|employee}}\n                    </span>\n                    <span>\n                        <title class=\"d-block text-center text-secondary font-weight-400\">Room</title>\n                        {{element.capabilities|room}}\n                    </span>\n                </span>\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef class=\"text-right\"> Actions</th>\n            <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\n                 <span class=\"d-flex justify-content-around ml-2\">\n                    <span>\n                            <mat-icon (click)=\"onEditRole(element)\" class=\"text-warning\" aria-hidden=\"false\"\n                                      aria-label=\"Example home icon\">edit</mat-icon>\n                    </span>\n                     <span>\n                            <mat-icon (click)=\"onDeleteRole(element)\" aria-hidden=\"false\" class=\"text-danger\"\n                                      aria-label=\"Example home icon\">delete</mat-icon>\n                     </span>\n                 </span>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Room} from '../../models/room.model';\nimport {RoomService} from '../../services/room.service';\nimport {Subscription} from 'rxjs';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {RoomFormComponent} from './room-form/room-form.component';\nimport {AuthService} from '../../services/auth.service';\nimport {User} from '../../services/user.model';\n\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css']\n})\nexport class RoomComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = ['roomId', 'name', 'bookingEmail', 'sitting', 'currentStatus'];\n  public rooms: Room[] = [];\n  public roomFetcheEvent: Subscription;\n  public loginEvent: Subscription;\n\n  constructor(public roomService: RoomService, public dialog: MatDialog, public authService: AuthService) {\n    this.roomFetcheEvent = this.roomService.roomFetchEvent.subscribe((rooms: Room[]) => {\n      this.rooms = rooms;\n    });\n\n    this.loginEvent = this.authService.userLogin.subscribe((user: User) => {\n      if (this.authService.userCan('conf_room_edit') || this.authService.userCan('conf_room_delete')) {\n        this.displayedColumns.push('actions');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.roomService.getRooms();\n  }\n\n  addRoom(): void {\n    this.openDialog(new Room({\n      id: 0,\n      room_id: '',\n      name: '',\n      booking_email: '',\n      sitting: '',\n      current_status: ''\n    }));\n  }\n\n  editRoom(room: Room): void {\n    this.openDialog(room);\n  }\n\n  deleteRoom(room: Room): void {\n    if (confirm('Are you sure ?')) {\n      this.roomService.deleteRoom(room);\n    }\n  }\n\n  private openDialog(room: Room): void {\n    this.dialog.open(RoomFormComponent, {\n      data: {...room}\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    this.roomFetcheEvent.unsubscribe();\n    this.loginEvent.unsubscribe();\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"d-flex justify-content-end mb-2\">\n    <button *ngIf=\"authService.userCan('conf_room_create')\" (click)=\"addRoom()\" mat-stroked-button color=\"primary\"\n            class=\"mt-2 mr-0\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">add</mat-icon>\n      New Room\n    </button>\n  </div>\n  <mat-card>\n    <table mat-table [dataSource]=\"rooms\" class=\"w-100\">\n      <ng-container matColumnDef=\"roomId\">\n        <th mat-header-cell *matHeaderCellDef> Room ID</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.roomId}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bookingEmail\">\n        <th mat-header-cell *matHeaderCellDef> Booking Email</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.bookingEmail}} </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"sitting\">\n        <th mat-header-cell *matHeaderCellDef> Sitting</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.sitting}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"currentStatus\">\n        <th mat-header-cell *matHeaderCellDef> Current Status</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.currentStatus}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Action</th>\n        <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"d-flex w-100  justify-content-around pd-2\">\n                        <i *ngIf=\"authService.userCan('conf_room_edit')\" style=\"cursor: pointer\" (click)=\"editRoom(element)\" class=\"fa fa-pencil text-warning\"></i>\n                        <i *ngIf=\"authService.userCan('conf_room_delete')\" style=\"cursor: pointer\" (click)=\"deleteRoom(element)\" class=\"fa fa-trash text-danger\"></i>\n                    </span>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </mat-card>\n</div>\n","export class Employee {\n  public id: number | undefined;\n  public name: string | undefined;\n  public empId: string | undefined;\n  public email: string | undefined;\n  public position: string | undefined;\n  public team: string | undefined;\n  public roleId: number;\n  public phone: string | undefined;\n\n  constructor(employee: {\n    id: number,\n    name: string,\n    emp_id: string,\n    email: string,\n    position: string,\n    team: string,\n    role_id: number,\n    phone: string,\n  }) {\n    this.id = employee.id;\n    this.name = employee.name;\n    this.empId = employee.emp_id;\n    this.email = employee.email;\n    this.position = employee.position;\n    this.team = employee.team;\n    this.roleId = employee.role_id;\n    this.phone = employee.phone;\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {RoleService} from '../../../services/role.service';\nimport {MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {Role} from '../../../models/role.model';\n\n@Component({\n    selector: 'app-edit-role',\n    templateUrl: './edit-role.component.html',\n    styleUrls: ['./edit-role.component.css']\n})\nexport class EditRoleComponent implements OnInit {\n    public isLoading = false;\n    public allCaps: string[] = [];\n    protected capEvent: Subscription;\n    public isEditMode = true;\n\n    constructor(private roleService: RoleService, @Inject(MAT_DIALOG_DATA) public role: Role) {\n        if (!role.id) {\n            this.isEditMode = false;\n        }\n        this.capEvent = this.roleService.capabilityEvent.subscribe((caps: string[]) => {\n            this.allCaps = caps;\n        });\n    }\n\n    ngOnInit(): void {\n        this.roleService.getCapabilities();\n    }\n\n    updateRole(): void {\n        this.roleService.updateRole(this.role);\n    }\n\n    addRole(): void {\n        this.roleService.addRole(this.role);\n    }\n\n}\n","<h2 mat-dialog-title>Roles</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <form>\n        <div class=\"form-group \">\n            <label>Role</label>\n            <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]=\"role.title\">\n        </div>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Permissions</mat-label>\n            <mat-select name=\"capabilities\" multiple [value]=\"role.capabilities\" [(ngModel)]=\"role.capabilities\">\n                <mat-option *ngFor=\"let cap of allCaps\" [value]=\"cap\">{{cap}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close (click)=\"isEditMode?updateRole():addRole()\">Save</button>\n    <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","<app-navbar></app-navbar>\n<app-login *ngIf=\"!isUserLoggedIn\"></app-login>\n<app-container *ngIf=\"isUserLoggedIn\"></app-container>\n<router-outlet></router-outlet>\n","import {Component} from '@angular/core';\nimport {AuthService} from './services/auth.service';\nimport {User} from './services/user.model';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    './app.component.css'\n  ]\n})\nexport class AppComponent {\n  public isUserLoggedIn = true;\n  protected userLoginEvent: Subscription;\n  protected userLogOutEvent: Subscription;\n\n  constructor(public authService: AuthService) {\n    this.userLoginEvent = this.authService.userLogin.subscribe((user: User) => {\n      this.isUserLoggedIn = true;\n    });\n\n    if (this.authService.isUserLoggedIn()) {\n      this.authService.getUserDetails();\n    } else {\n      this.isUserLoggedIn = false;\n    }\n\n    this.userLogOutEvent = this.authService.userLogout.subscribe((res) => {\n      this.isUserLoggedIn = false;\n    });\n  }\n\n  OnInit(): void {\n\n  }\n\n  OnDestroy(): void {\n    this.userLoginEvent.unsubscribe();\n    this.userLogOutEvent.unsubscribe();\n  }\n}\n","import {Component, Inject, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Employee} from '../../../models/employee.model';\nimport {Subscription} from 'rxjs';\nimport {EmployeeService} from '../../../services/employee.service';\nimport {RoleService} from '../../../services/role.service';\nimport {Role} from '../../../models/role.model';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Room} from '../../../models/room.model';\n\n@Component({\n  selector: 'app-employee-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit, OnDestroy {\n  public isLoading = false;\n  private roleEvent: Subscription;\n  private employeeAddEvent: Subscription;\n  private employeeUpdateEvent: Subscription;\n  public roles: Role[] = [];\n  public editMode = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public employee: Employee, private employeeService: EmployeeService, protected roleService: RoleService, public dialog: MatDialogRef<CreateComponent>) {\n    this.roleEvent = this.roleService.roleEvent.subscribe((roles) => {\n      this.roles = roles;\n    });\n    this.employeeAddEvent = this.employeeService.addEvent.subscribe((emp) => {\n      this.dialog.close();\n    });\n\n    this.employeeUpdateEvent = this.employeeService.editEvent.subscribe((emp) => {\n      this.dialog.close();\n    });\n  }\n\n  ngOnInit(): void {\n    this.roleService.getRoles();\n    this.editMode = (this.employee.id !== undefined && this.employee.id > 0);\n  }\n\n  public createEmployee(): void {\n    this.employeeService.addEmployee(this.employee);\n  }\n\n  editEmployee(): void {\n    this.isLoading = true;\n    this.employeeService.editEmployee(this.employee);\n  }\n\n  ngOnDestroy(): void {\n    this.roleEvent.unsubscribe();\n    this.employeeAddEvent.unsubscribe();\n  }\n}\n","<h2 mat-dialog-title>Add Employee</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>EmpId</label>\n        <input required type=\"text\" name=\"empId\" id=\"emp-id\" class=\"form-control\"\n               [(ngModel)]=\"employee.empId\">\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input required type=\"text\" name=\"name\" id=\"name\" class=\"form-control\"\n               [(ngModel)]=\"employee.name\">\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Email</label>\n        <input required type=\"email\" name=\"email\" id=\"email\" class=\"form-control\"\n               [(ngModel)]=\"employee.email\">\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Position</label>\n        <input required type=\"text\" name=\"position\" id=\"position\" class=\"form-control\"\n               [(ngModel)]=\"employee.position\">\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Team</label>\n        <input required type=\"text\" name=\"team\" id=\"team\" class=\"form-control\"\n               [(ngModel)]=\"employee.team\">\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label>Phone</label>\n        <input required type=\"text\" name=\"phone\" id=\"phone\" class=\"form-control\"\n               [(ngModel)]=\"employee.phone\">\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>Role</label>\n    <select class=\"form-control\" name=\"roleId\" [(ngModel)]=\"employee.roleId\">\n      <option *ngFor=\"let role of roles\" [value]=\"role.id\">{{role.title}}</option>\n    </select>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"editMode?editEmployee():createEmployee()\">Save</button>\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {ContainerComponent} from './container/container.component';\nimport {EmployeeComponent} from './container/employee/employee.component';\nimport {RoomComponent} from './container/room/room.component';\nimport {CreateComponent} from './container/employee/create/create.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {RoleComponent} from './navbar/role/role.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatButtonModule} from '@angular/material/button';\nimport {EmployeeCapabilityPipe} from './pipes/employee-capability.pipe';\nimport {RoomCapabilityPipe} from './pipes/room-capability.pipe';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {EditRoleComponent} from './navbar/role/edit-role/edit-role.component';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatCardModule} from '@angular/material/card';\nimport {RoomFormComponent} from './container/room/room-form/room-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NavbarComponent,\n    ContainerComponent,\n    EmployeeComponent,\n    RoomComponent,\n    CreateComponent,\n    RoleComponent,\n    EmployeeCapabilityPipe,\n    RoomCapabilityPipe,\n    EditRoleComponent,\n    RoomFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatTableModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    MatIconModule,\n    MatTabsModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export class Role {\n    public title: string;\n    public id: number;\n    public capabilities: [string];\n\n    constructor(role: { id: number; title: string; capabilities: [string] }) {\n        this.id = role.id;\n        this.title = role.title;\n        this.capabilities = role.capabilities;\n    }\n}","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {User} from '../services/user.model';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {RoleService} from '../services/role.service';\nimport {RoleComponent} from './role/role.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  public isUserLoggedIn = false;\n  public user: User | undefined;\n  public logoutEvent: Subscription;\n  public logInEvent: Subscription;\n  public displayRole = false;\n\n  constructor(public authService: AuthService, protected roleService: RoleService, public dialog: MatDialog) {\n    this.logInEvent = this.authService.userLogin.subscribe((user: User) => {\n      this.user = user;\n      this.isUserLoggedIn = true;\n    });\n    this.logoutEvent = this.authService.userLogout.subscribe(() => {\n      this.isUserLoggedIn = false;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  launchRoleModel(): void {\n    this.dialog.open(RoleComponent);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n\n  ngOnDestroy(): void {\n    this.logInEvent.unsubscribe();\n    this.logoutEvent.unsubscribe();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light text-primary bg-white\" style=\"border-bottom: 2px solid #007bff \">\n  <a class=\"navbar-brand\" href=\"/\"><strong>People</strong>Portal</a>\n\n  <div class=\" navbar-collapse\" id=\"navbarSupportedContent\">\n    <div class=\"row w-100 align-items-center\">\n      <div class=\"col-md-7\">\n      </div>\n      <div class=\"col-md-2\">\n        <div class=\"pd-2 d-inline mr-2 d-flex align-items-center justify-content-end\"\n             *ngIf=\"(this.authService.userCan('employee_delete') || this.authService.userCan('employee_edit'))\">\n          <button (click)=\"launchRoleModel()\" mat-stroked-button color=\"primary\">\n            <mat-icon aria-hidden=\"false\" aria-label=\"Roles\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24\"\n                   viewBox=\"0 0 24 24\" width=\"24\">\n                <g>\n                  <path d=\"M0,0h24v24H0V0z\" fill=\"none\"/>\n                  <path\n                    d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"/>\n                </g>\n              </svg>\n            </mat-icon>\n            Roles\n          </button>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n\n        <div class=\"pd-2 d-inline mr-2 d-flex align-items-center justify-content-end\"\n             *ngIf=\"isUserLoggedIn\">\n          <div class=\"p-2\">\n            <mat-icon aria-hidden=\"false\" aria-label=\"Roles\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                <path\n                  d=\"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"/>\n              </svg>\n            </mat-icon>\n\n          </div>\n          <div class=\"p-2\">\n            <span class=\"\">\n              {{(user === undefined) ? '' : user.getName()|titlecase}} <small\n              class=\"d-block\">{{(user === undefined) ? '' : user.getRole()|titlecase}}</small>\n            </span>\n          </div>\n          <div class=\"p-2\">\n            <button (click)=\"logout()\" mat-stroked-button color=\"primary\">\n              Logout\n              <mat-icon aria-hidden=\"false\" aria-label=\"Roles\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path\n                    d=\"M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z\"/>\n                </svg>\n              </mat-icon>\n            </button>\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  </div>\n</nav>\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {Observable, ObservableInput, Subscription} from 'rxjs';\nimport {User} from './user.model';\nimport {DataService} from './data.service';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  public user: User | undefined;\n  public userLogin: EventEmitter<any> = new EventEmitter();\n  public userLoginFailed: EventEmitter<any> = new EventEmitter();\n  public userLogout: EventEmitter<any> = new EventEmitter();\n\n  constructor(private http: HttpClient, private dataService: DataService) {\n  }\n\n  private getUrl(endpoint: string): string {\n    return this.dataService.getUrl(endpoint);\n  }\n\n  public login(email: string, password: string): void {\n    this.http.post<User>(this.getUrl('/api/login'), {email, password}).subscribe((res: any) => {\n      if (res.success) {\n        localStorage.setItem('access_token', res.data.access_token as string);\n        localStorage.setItem('refresh_token', res.data.refresh_token as string);\n        this.getUserDetails();\n      } else {\n        this.userLoginFailed.emit('Login failed');\n        alert('Invalid Credentials!');\n      }\n    });\n  }\n\n  public isUserLoggedIn(): boolean {\n    return (this.getAccessToken() !== null);\n  }\n\n  getUserDetails(): void {\n    this.http.get<User>(this.dataService.getUrl('/api/user'), {headers: this.getAuthHeaders()}).subscribe((res: any) => {\n      if (res.success) {\n        this.user = new User(res.data);\n        this.userLogin.emit(this.user);\n      }\n    }, (err) => {\n      this.handelErrors(err);\n    });\n  }\n\n  public getAccessToken(): string {\n    return localStorage.getItem('access_token') as string;\n  }\n\n  public getRefreshToken(): string {\n    return localStorage.getItem('refresh_token') as string;\n  }\n\n  public logout(): void {\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('access_token');\n    this.userLogout.emit('User Logged out.');\n  }\n\n  public getAuthHeaders(): HttpHeaders {\n    return new HttpHeaders()\n      .set('content-type', 'application/json')\n      .set('Access-Control-Allow-Origin', '*')\n      .set('Access-Control-Allow-Headers', '*')\n      .set('Accept', 'application/json, text/plain')\n      .set('Authorization', 'Bearer ' + this.getAccessToken());\n  }\n\n  public userCan(cap: string): boolean {\n    return ((this.user !== undefined) && (this.user.capabilities.indexOf(cap) !== -1));\n  }\n\n  public handelErrors(err: HttpErrorResponse): void {\n    switch (err.status) {\n      case 401:\n        this.logout();\n        break;\n    }\n  }\n}\n\n","import {Component, OnInit, OnDestroy, AfterViewInit, OnChanges} from '@angular/core';\nimport {EmployeeService} from '../../services/employee.service';\nimport {Employee} from '../../models/employee.model';\nimport {Subscription} from 'rxjs';\nimport {AuthService} from '../../services/auth.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateComponent} from './create/create.component';\nimport {RoleService} from '../../services/role.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit, OnDestroy {\n  public employees: Employee[] = [];\n  public editMode = false;\n  public createMode = false;\n  public displayedColumns = ['ID', 'name', 'email', 'position', 'team', 'phone', 'action'];\n\n  private setEmployeeSubscription: Subscription;\n  private editEmployeeSubscription: Subscription;\n  private deleteEmployeeSubscription: Subscription;\n  private addEmployeeSubscription: Subscription;\n\n  public employee: Employee = new Employee(\n    {\n      id: 0,\n      name: '',\n      emp_id: '',\n      email: '',\n      position: '',\n      team: '',\n      role_id: 0,\n      phone: '',\n    }\n  );\n\n  constructor(public employeeService: EmployeeService, public authService: AuthService, public dialog: MatDialog) {\n    this.setEmployeeSubscription = this.employeeService.setEmployees.subscribe((employees: Employee[]) => {\n      this.employees = employees;\n    });\n    this.editEmployeeSubscription = this.employeeService.editEvent.subscribe((employee) => {\n      this.editMode = false;\n      this.employeeService.fetchData();\n      this.dialog.closeAll();\n    });\n    this.deleteEmployeeSubscription = this.employeeService.deleteEvent.subscribe((employee: Employee) => {\n      this.employeeService.fetchData();\n    });\n\n    this.addEmployeeSubscription = this.employeeService.addEvent.subscribe((employee: Employee) => {\n      this.createMode = false;\n      this.employeeService.fetchData();\n    });\n  }\n\n  ngOnInit(): void {\n    this.employeeService.fetchData();\n  }\n\n  editEmployee(employee: Employee): void {\n    this.dialog.open(CreateComponent, {data: employee});\n  }\n\n  addEmployee(): void {\n    this.dialog.open(CreateComponent, {\n      data: new Employee({\n        id: 0,\n        name: '',\n        emp_id: '',\n        email: '',\n        position: '',\n        team: '',\n        role_id: 2,\n        phone: '',\n      })\n    });\n  }\n\n  deleteEmployee(employee: Employee): void {\n    if (confirm('Are you sure ?')) {\n      this.employeeService.deleteEmployee(employee);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.setEmployeeSubscription.unsubscribe();\n    this.editEmployeeSubscription.unsubscribe();\n    this.deleteEmployeeSubscription.unsubscribe();\n    this.addEmployeeSubscription.unsubscribe();\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"d-flex justify-content-end mb-2\">\n    <button *ngIf=\"authService.userCan('employee_create')\" (click)=\"addEmployee()\" mat-stroked-button color=\"primary\"\n            class=\"mt-2 mr-0\">\n      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">add</mat-icon>\n      New Employee\n    </button>\n  </div>\n  <div class=\"col-sm-12\">\n\n    <mat-card>\n      <table mat-table [dataSource]=\"employees\" class=\"w-100\">\n        <ng-container matColumnDef=\"ID\">\n          <th mat-header-cell *matHeaderCellDef> Employee Id</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.empId}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Name</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef>Email</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef>Position</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"team\">\n          <th mat-header-cell *matHeaderCellDef> Team</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.team}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"phone\">\n          <th mat-header-cell *matHeaderCellDef> Phone</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Action</th>\n          <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"d-flex w-100  justify-content-around pd-2\">\n                        <i *ngIf=\"authService.userCan('employee_edit')\" style=\"cursor: pointer\"\n                           (click)=\"editEmployee(element)\" class=\"fa fa-pencil text-warning\"></i>\n                        <i *ngIf=\"authService.userCan('employee_delete')\" style=\"cursor: pointer\"\n                           (click)=\"deleteEmployee(employee)\" class=\"fa fa-trash text-danger\"></i>\n                    </span>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </mat-card>\n  </div>\n</div>\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Employee} from '../models/employee.model';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {DataService} from './data.service';\nimport {AuthService} from './auth.service';\nimport {HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EmployeeService {\n    public employees: Employee[] = [];\n    public setEmployees: EventEmitter<any> = new EventEmitter();\n    public editEvent: EventEmitter<Employee> = new EventEmitter();\n    public deleteEvent: EventEmitter<Employee> = new EventEmitter();\n    public addEvent: EventEmitter<Employee> = new EventEmitter();\n    protected allCapabilities: [] = [];\n\n\n    constructor(private http: HttpClient, private dataService: DataService, private authService: AuthService) {\n        this.fetchData();\n    }\n\n    public fetchData(): void {\n        this.http.get(this.dataService.getUrl('/api/employee'), {headers: this.getHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.setData(this.dataService.getResponseData(res));\n            } else {\n                alert('Error while loading the employee');\n            }\n        });\n    }\n\n    getEmployees(): Employee[] | undefined {\n        return this.employees;\n    }\n\n    private setData(data: { current_page: number, data: [] }): void {\n        this.employees = [];\n        data.data.forEach((employee, index) => {\n            this.employees.push(new Employee(employee));\n        });\n        this.setEmployees.emit(this.employees);\n    }\n\n    addEmployee(employee: Employee): void {\n      // tslint:disable-next-line:max-line-length\n        this.http.post(this.dataService.getUrl('/api/employee'), employee, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                const emp: Employee = new Employee(this.dataService.getResponseData(res));\n                this.employees.push(emp);\n                this.addEvent.emit(emp);\n            } else {\n                alert('Error while saving employee. Check if Email id is already exists');\n            }\n        });\n    }\n\n    editEmployee(employee: Employee): void {\n        this.http.put(this.dataService.getUrl('/api/employee/' + employee.id), employee, {headers: this.getHeaders()}).subscribe((res) => {\n            this.editEvent.emit(employee);\n        });\n    }\n\n    deleteEmployee(employee: Employee): void {\n        this.http.delete(this.dataService.getUrl('/api/employee/' + employee.id), {headers: this.getHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.deleteEvent.emit(employee);\n            }\n        });\n    }\n\n    private getHeaders(): HttpHeaders {\n        return this.authService.getAuthHeaders();\n    }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-container',\n    templateUrl: './container.component.html',\n    styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<mat-tab-group class=\"mt-2\">\n  <mat-tab label=\"Employees\" class=\"mb-2\">\n    <app-employee></app-employee>\n  </mat-tab>\n  <mat-tab label=\"Rooms\" class=\"mb-2\">\n    <app-room></app-room>\n\n  </mat-tab>\n</mat-tab-group>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container\">\n  <div class=\"row justify-content-center p-5\">\n    <div class=\"col-md-6 col-md-offset-3\">\n      <div class=\"card card-primary\">\n        <div class=\"card-header bg-primary text-white\">Login</div>\n        <div class=\"card-body\">\n          <form autocomplete=\"off\" (ngSubmit)=\"login(loginForm)\" #loginForm=\"ngForm\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                required\n                ngModel\n              />\n            </div>\n            <div class=\"form-group mb-2\">\n              <label for=\"password\">Password</label>\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                id=\"password\"\n                name=\"password\"\n                ngModel\n                required\n              />\n            </div>\n            <div class=\"form-group mt-4\">\n              <button d class=\"btn btn-primary pull-right\" [disabled]=\"loginForm.invalid\">Login <i\n                *ngIf=\"isLoading\"\n                class=\"fa fa-spinner fa-spin\"></i>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {AuthService} from '../services/auth.service';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  public isLoading = false;\n  public loginEvent: Subscription;\n  public loginFailedEvent: Subscription;\n\n  constructor(private authService: AuthService) {\n    this.loginEvent = this.authService.userLogin.subscribe((res) => {\n      this.isLoading = false;\n    });\n    this.loginFailedEvent = this.authService.userLoginFailed.subscribe((res) => {\n      this.isLoading = false;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  public login(loginForm: NgForm): any {\n    this.isLoading = true;\n    this.authService.login(loginForm.value.email, loginForm.value.password);\n  }\n\n  ngOnDestroy(): void {\n    this.loginEvent.unsubscribe();\n  }\n\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Room} from '../models/room.model';\nimport {DataService} from './data.service';\nimport {AuthService} from './auth.service';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RoomService {\n    public rooms: Room[] = [];\n    public roomFetchEvent: EventEmitter<any> = new EventEmitter();\n    public roomAddEvent: EventEmitter<any> = new EventEmitter();\n    public roomUpdateEvent: EventEmitter<any> = new EventEmitter();\n\n    constructor(public dataService: DataService, public authService: AuthService, private http: HttpClient) {\n    }\n\n    private setData(data: {\n        current_page: number,\n        data: [],\n        first_page_url: string,\n        from: number,\n        last_page: number,\n        last_page_url: string | null,\n        next_page_url: null | string,\n        path: string,\n        per_page: number,\n        prev_page_url: null | string,\n        to: number,\n        total: number\n    }): Room[] {\n        this.rooms = [];\n        data.data.forEach((room: any) => {\n            this.rooms.push(new Room(room));\n        });\n        return this.rooms;\n    }\n\n    public getRooms(): void {\n        // tslint:disable-next-line:max-line-length\n        this.http.get<Room>(this.dataService.getUrl('/api/conference-room'), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.roomFetchEvent.emit(this.setData(this.dataService.getResponseData(res)));\n            } else {\n                alert('Error While fetching room');\n            }\n        });\n    }\n\n    addRoom(room: Room): void {\n        this.http.post<Room>(this.dataService.getUrl('/api/conference-room'), room, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                const _room = new Room(this.dataService.getResponseData(res));\n                this.rooms.push(_room);\n                this.roomAddEvent.emit(_room);\n                this.getRooms();\n            } else {\n                alert('Error While adding room');\n            }\n        });\n    }\n\n    updateRoom(room: Room): void {\n        this.http.put<Room>(this.dataService.getUrl('/api/conference-room/' + room.id), room, {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.roomUpdateEvent.emit(room);\n                this.getRooms();\n            } else {\n                alert('Error While updating room');\n            }\n        });\n    }\n\n    deleteRoom(room: Room): void {\n        this.http.delete<Room>(this.dataService.getUrl('/api/conference-room/' + room.id), {headers: this.authService.getAuthHeaders()}).subscribe((res: any) => {\n            if (this.dataService.isResponseSuccess(res)) {\n                this.getRooms();\n            } else {\n                alert('Error While deleting room');\n            }\n        });\n    }\n\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'employee'\n})\nexport class EmployeeCapabilityPipe implements PipeTransform {\n    protected values: [] = [];\n\n    transform(value: [], ...args: unknown[]): Array<string> {\n        return this.getOnlyEmployees(value);\n    }\n\n    protected getOnlyEmployees(caps: []): Array<string> {\n        return caps.filter((cap: string): boolean => cap.includes('employee')).map((cap: string) => cap.replace('employee_', ''));\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}